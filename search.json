[
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Week\n\n\nDates\n\n\nTopic\n\n\n\n\n\n\nWeek 01\n\n\nJan 06 - Jan 17\n\n\nWelcome to Seismic Monitoring CO2 Storage\n\n\n\n\nWeek 02\n\n\nJan 22 - Jan 24\n\n\nGeological Storage CO2\n\n\n\n\nWeek 03\n\n\nJanuary 27- 31\n\n\nStorage Capacity\n\n\n\n\nWeek 04\n\n\nFeb 02 - 07\n\n\nReservoir Simulations\n\n\n\n\nWeek 05\n\n\nFeb 10 - 14\n\n\nInjectivity and Geomechanics\n\n\n\n\nWeek 06\n\n\nFeb 17 - 21\n\n\nProject design, Transport, Managing pressure\n\n\n\n\nWeek 07\n\n\nFeb 24 - 28\n\n\nForecasting, Monitoring, Basics Seismic\n\n\n\n\nWeek 08\n\n\nMarch 03 - 07\n\n\nBasics Seismic Imaging\n\n\n\n\nWeek 09\n\n\nMarch 10 - 14\n\n\nBasics Seismic Imaging\n\n\n\n\n\nNo matching items\n\n\n\n\nLabs will be due on Fridays at 11:59pm.",
    "crumbs": [
      "Schedule"
    ]
  },
  {
    "objectID": "schedule.html#weekly-schedule",
    "href": "schedule.html#weekly-schedule",
    "title": "Schedule",
    "section": "",
    "text": "Week\n\n\nDates\n\n\nTopic\n\n\n\n\n\n\nWeek 01\n\n\nJan 06 - Jan 17\n\n\nWelcome to Seismic Monitoring CO2 Storage\n\n\n\n\nWeek 02\n\n\nJan 22 - Jan 24\n\n\nGeological Storage CO2\n\n\n\n\nWeek 03\n\n\nJanuary 27- 31\n\n\nStorage Capacity\n\n\n\n\nWeek 04\n\n\nFeb 02 - 07\n\n\nReservoir Simulations\n\n\n\n\nWeek 05\n\n\nFeb 10 - 14\n\n\nInjectivity and Geomechanics\n\n\n\n\nWeek 06\n\n\nFeb 17 - 21\n\n\nProject design, Transport, Managing pressure\n\n\n\n\nWeek 07\n\n\nFeb 24 - 28\n\n\nForecasting, Monitoring, Basics Seismic\n\n\n\n\nWeek 08\n\n\nMarch 03 - 07\n\n\nBasics Seismic Imaging\n\n\n\n\nWeek 09\n\n\nMarch 10 - 14\n\n\nBasics Seismic Imaging\n\n\n\n\n\nNo matching items\n\n\n\n\nLabs will be due on Fridays at 11:59pm.",
    "crumbs": [
      "Schedule"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "References\n\n\n\n\n\n\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "slides/week-04/07-flow-simulations-2.html#section",
    "href": "slides/week-04/07-flow-simulations-2.html#section",
    "title": "Lecture 7 — Reservoir Simulations II",
    "section": "",
    "text": "Slides for the lecture can be found here\n\nin .pdf format\nin .html format.\n\nYou need to download the html directory and open the index.html file."
  },
  {
    "objectID": "slides/week-03/04-calculating-storage-capacity.html#section",
    "href": "slides/week-03/04-calculating-storage-capacity.html#section",
    "title": "Lecture 4 — Calculating Storage Capacity",
    "section": "",
    "text": "Slides for the lecture can be found here\n\nin .pdf format\nin .html format.\n\nYou need to download the html directory and open the index.html file."
  },
  {
    "objectID": "slides/week-02/03-geological-storage-b.html#section",
    "href": "slides/week-02/03-geological-storage-b.html#section",
    "title": "Lecture 2 — Geological Storage",
    "section": "",
    "text": "Slides for the lecture can be found here\n\nin .pdf format\nin .html format.\n\nYou need to download the html directory and open the index.html file."
  },
  {
    "objectID": "slides/week-05/09-pressure.html#section",
    "href": "slides/week-05/09-pressure.html#section",
    "title": "Lecture 8 — Injectivity & Geomechanics",
    "section": "",
    "text": "Slides for the lecture can be found here\n\nin .pdf format\nin .html format.\n\nYou need to download the html directory and open the index.html file."
  },
  {
    "objectID": "slides/week-07/13-monitoring-3.html#section",
    "href": "slides/week-07/13-monitoring-3.html#section",
    "title": "Lecture 13 — Monitoring III",
    "section": "",
    "text": "Slides for the lecture can be found here\n\nin .pdf format\nin .html format.\n\nYou need to download the html directory and open the index.html file."
  },
  {
    "objectID": "slides/week-06/11-monitoring-1.html#section",
    "href": "slides/week-06/11-monitoring-1.html#section",
    "title": "Lecture 11 — Monitoring",
    "section": "",
    "text": "Slides for the lecture can be found here\n\nin .pdf format\nin .html format.\n\nYou need to download the html directory and open the index.html file."
  },
  {
    "objectID": "slides/week-01/02-geological-storage-a.html#section",
    "href": "slides/week-01/02-geological-storage-a.html#section",
    "title": "Lecture 2 — Geological Storage",
    "section": "",
    "text": "Slides for the lecture can be found here\n\nin .pdf format\nin .html format.\n\nYou need to download the html directory and open the index.html file."
  },
  {
    "objectID": "slides/week-08/14-Basics-Seismic-Imaging-1.html#section",
    "href": "slides/week-08/14-Basics-Seismic-Imaging-1.html#section",
    "title": "Lecture 14 — Basics Seismic Imaging I",
    "section": "",
    "text": "Slides for the lecture can be found here\n\nin .pdf format"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Seismic Monitoring CO2 Storage",
    "section": "",
    "text": "Carbon Capture and Storage (CCS) is widely considered as a key scalable net-negative CO2 emission technology to help combat climate change. The course covers the Basics of Geological Carbon Storage, its Design & Scale Up, and its Seismic Monitoring. Aside from reviewing the geophysical challenges and computational aspects of monitoring Geological Carbon Storage, the course also addresses societal impact of this technology. Its (perceived) risk will be discussed by weighting the risk of doing something, by injecting CO2 underground, against doing nothing.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#course-overview",
    "href": "index.html#course-overview",
    "title": "Seismic Monitoring CO2 Storage",
    "section": "",
    "text": "Carbon Capture and Storage (CCS) is widely considered as a key scalable net-negative CO2 emission technology to help combat climate change. The course covers the Basics of Geological Carbon Storage, its Design & Scale Up, and its Seismic Monitoring. Aside from reviewing the geophysical challenges and computational aspects of monitoring Geological Carbon Storage, the course also addresses societal impact of this technology. Its (perceived) risk will be discussed by weighting the risk of doing something, by injecting CO2 underground, against doing nothing.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#class-meetings",
    "href": "index.html#class-meetings",
    "title": "Seismic Monitoring CO2 Storage",
    "section": "Class meetings",
    "text": "Class meetings\n\n\n\n\n\n\n\n\nMeeting\nLocation\nTime\n\n\n\n\nLecture\nFord Environmental Sci & Tech, L1116\nMon & Wed 3:30 - 4:45PM",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#teaching-team",
    "href": "index.html#teaching-team",
    "title": "Seismic Monitoring CO2 Storage",
    "section": "Teaching team",
    "text": "Teaching team\n\n\n\nName\nOffice hours\nLocation\n\n\n\n\nFelix J. Herrmann (Instructor)\nTBD\nZoom\n\n\nHaoyun (Jason) Li (TA)\nTBD\nZoom",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#access-to-piazza",
    "href": "index.html#access-to-piazza",
    "title": "Seismic Monitoring CO2 Storage",
    "section": "Access to Piazza",
    "text": "Access to Piazza\nStudents are encouraged to post their questions on Piazza, which will be monitored by Haoyun (Jason) Li.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "seminar.html",
    "href": "seminar.html",
    "title": "Seminar",
    "section": "",
    "text": "There are 9 time slots until the end the term. So, please prepare a 30 minute lecture on a paper of interest. This contents of the paper should be aligned with the general topics areas of this course. We encourage you to also choose a topic in the general area of your PhD research. When in doubt please reach out.\n\n\nHere is a list of papers that may be of interest when presenting your seminar. Please check the papers cited in these papers\n\nA comprehensive review of digital twin—part 1: modeling and twinning enabling technologies by Thelen et. al.\nA comprehensive review of digital twin—part 2: roles of uncertainty quantification and optimization, a battery digital twin, and perspectives by Thelen et. al. \nDigital Twins for Materials by Kalidindi et. al.\nA Probabilistic Graphical Model Foundation for Enabling Predictive Digital Twins at Scale by Kapteyn et. al.\nNational Academies of Sciences, Engineering, and Medicine. 2023. Foundational Research Gaps and Future Directions for Digital Twins. Washington, DC: The National Academies Press.\nTorzoni, M., Tezzele, M., Mariani, S., Manzoni, A. and Willcox K. A digital twin framework for civil engineering structures. To appear, Computer Methods in Applied Mechanics and Engineering, 2023.\nKapteyn, M. and Willcox, K., Design of digital twin sensing strategies via predictive modeling and interpretable machine learning. Journal of Mechanical Design, June 2022. https://doi.org/10.1115/1.4054907\nNiederer, S., Sacks, M., Girolami, M. and Willcox, K., Scaling digital twins from the artisanal to the industrial. Nature Computational Science, Vol. 1, No. 5, May 2021, pp. 313-320."
  },
  {
    "objectID": "seminar.html#list-of-papers",
    "href": "seminar.html#list-of-papers",
    "title": "Seminar",
    "section": "",
    "text": "Here is a list of papers that may be of interest when presenting your seminar. Please check the papers cited in these papers\n\nA comprehensive review of digital twin—part 1: modeling and twinning enabling technologies by Thelen et. al.\nA comprehensive review of digital twin—part 2: roles of uncertainty quantification and optimization, a battery digital twin, and perspectives by Thelen et. al. \nDigital Twins for Materials by Kalidindi et. al.\nA Probabilistic Graphical Model Foundation for Enabling Predictive Digital Twins at Scale by Kapteyn et. al.\nNational Academies of Sciences, Engineering, and Medicine. 2023. Foundational Research Gaps and Future Directions for Digital Twins. Washington, DC: The National Academies Press.\nTorzoni, M., Tezzele, M., Mariani, S., Manzoni, A. and Willcox K. A digital twin framework for civil engineering structures. To appear, Computer Methods in Applied Mechanics and Engineering, 2023.\nKapteyn, M. and Willcox, K., Design of digital twin sensing strategies via predictive modeling and interpretable machine learning. Journal of Mechanical Design, June 2022. https://doi.org/10.1115/1.4054907\nNiederer, S., Sacks, M., Girolami, M. and Willcox, K., Scaling digital twins from the artisanal to the industrial. Nature Computational Science, Vol. 1, No. 5, May 2021, pp. 313-320."
  },
  {
    "objectID": "hw/w3-hw01.html",
    "href": "hw/w3-hw01.html",
    "title": "In-class exercise",
    "section": "",
    "text": "In the lectures, we learned that the thickness of a gas or oil column can be retained by\n\\(z_g =  \\frac{2 \\gamma \\cos\\theta (1/r_{cap}-1/r_{res})}{g (\\rho_w-\\rho_g)}\\)\nPlease estimate the range of \\(z_g\\) for a CO\\(_2\\) reservoir. Free feel to search for some values in this formula and you can also follow some of the references below\nhttps://onlinelibrary.wiley.com/doi/epdf/10.1111/j.1468-8123.2007.00168.x\nhttps://link.springer.com/content/pdf/10.1007/s13202-021-01298-9.pdf\nhttps://www.sciencedirect.com/science/article/pii/S0927775721009870?via%3Dihub"
  },
  {
    "objectID": "hw/w3-hw01.html#question-1",
    "href": "hw/w3-hw01.html#question-1",
    "title": "In-class exercise",
    "section": "",
    "text": "In the lectures, we learned that the thickness of a gas or oil column can be retained by\n\\(z_g =  \\frac{2 \\gamma \\cos\\theta (1/r_{cap}-1/r_{res})}{g (\\rho_w-\\rho_g)}\\)\nPlease estimate the range of \\(z_g\\) for a CO\\(_2\\) reservoir. Free feel to search for some values in this formula and you can also follow some of the references below\nhttps://onlinelibrary.wiley.com/doi/epdf/10.1111/j.1468-8123.2007.00168.x\nhttps://link.springer.com/content/pdf/10.1007/s13202-021-01298-9.pdf\nhttps://www.sciencedirect.com/science/article/pii/S0927775721009870?via%3Dihub"
  },
  {
    "objectID": "weeks/week-01.html",
    "href": "weeks/week-01.html",
    "title": "Week 01",
    "section": "",
    "text": "Lectures\n\n\n\n\n\nTopic\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nWelcome to Seismic Monitoring CO2 Storage\n\n\nIntroduction\n\n\nMon, Jan 13\n\n\n\n\nLecture 2 — Geological Storage\n\n\nSurface Tension, Capillary effects, Permeability”\n\n\nWed, Jan 15\n\n\n\n\n\nNo matching items\n\n\n\n\nAssignments\n\n\n\n\n\nReadings\n\n\n\nCourse Syllabus\n\n\nFrom (Ringrose 2020) read Chapter 1 and Chapter 2 until section 2.3, which was discussed during Lecture 1.\n\n\nIn preparation of Lecture 2, read pages 17-29 from Chapter 2 of Gueguen(Guéguen and Palciauskas 1994) (for more background see also Chapter 1).\n\n\nAlso read sections 2.3.1 and 2.3.2 of the main text by (Ringrose 2020).\n\n\n\n\n\n\n\n\n\nReferences\n\nGuéguen, Yves, and Victor Palciauskas. 1994. Introduction to the Physics of Rocks. Princeton University Press.\n\n\nRingrose, Philip. 2020. How to Store CO2 Underground: Insights from Early-Mover CCS Projects. Springer. https://link.springer.com/book/10.1007/978-3-030-33113-9.\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "weeks/week-02.html",
    "href": "weeks/week-02.html",
    "title": "Week 02",
    "section": "",
    "text": "Lectures\n\n\n\n\n\nTopic\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nLecture 2 — Geological Storage\n\n\nCapillary effects, Relative Permeability, Dissolution\n\n\nWed, Jan 22\n\n\n\n\n\nNo matching items\n\n\n\n\nAssignments\n\n\n\n\n\nReadings\n\n\n\nRingrose(Ringrose 2020) book section 2.3.1 until 2.4\n\n\nPages 30-39 from Chapter 2 of Gueguen(Guéguen and Palciauskas 1994).\n\n\nPages 118-122 (top) from Chapter 5 of Gueguen(Guéguen and Palciauskas 1994).\n\n\n\n\n\n\n\n\n\nReferences\n\nGuéguen, Yves, and Victor Palciauskas. 1994. Introduction to the Physics of Rocks. Princeton University Press.\n\n\nRingrose, Philip. 2020. How to Store CO2 Underground: Insights from Early-Mover CCS Projects. Springer. https://link.springer.com/book/10.1007/978-3-030-33113-9.\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "weeks/week-07.html",
    "href": "weeks/week-07.html",
    "title": "Week 07",
    "section": "",
    "text": "Lectures\n\n\n\n\n\nTopic\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nLecture 12 — Monitoring II\n\n\nManagement & Monitoring\n\n\nMon, Feb 24\n\n\n\n\nLecture 13 — Monitoring III\n\n\nManagement & Monitoring\n\n\nWed, Feb 26\n\n\n\n\n\nNo matching items\n\n\n\n\nAssignments\n\n\n\n\n\nAssignment\n\n\nTitle\n\n\nDue\n\n\n\n\n\n\n\nNo matching items\n\n\n\n\nReadings\n\n\n\n\n\n\nSections 3.6 of the main text by (Ringrose 2020)\n\n\nChapter 4 except Geophysical … long-offset data, until Monitoring…Snovit on page 89 (Ringrose 2023)\n\n\n\n\n\n\n\n\n\nReferences\n\nRingrose, Philip. 2020. How to Store CO2 Underground: Insights from Early-Mover CCS Projects. Springer. https://link.springer.com/book/10.1007/978-3-030-33113-9.\n\n\n———. 2023. Storage of Carbon Dioxide in Saline Aquifers: Building Confidence by Forecasting and Monitoring. Society of Exploration Geophysicists.\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "weeks/week-04.html",
    "href": "weeks/week-04.html",
    "title": "Week 04",
    "section": "",
    "text": "Lectures\n\n\n\n\n\nTopic\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nLecture 6 — Reservoir Simulations\n\n\nGoverning Equations Simulations Examples\n\n\nMon, Feb 03\n\n\n\n\nLecture 7 — Reservoir Simulations II\n\n\nGoverning Equations Simulations Examples Injectivity\n\n\nWed, Feb 05\n\n\n\n\n\nNo matching items\n\n\n\n\nAssignments\n\n\n\n\n\nAssignment\n\n\nTitle\n\n\nDue\n\n\n\n\n\n\nExercise\n\n\nIn-class exercise\n\n\nMon, Feb 03\n\n\n\n\nLab\n\n\nIntro Reservoir Simulations\n\n\nFri, Feb 14\n\n\n\n\n\nNo matching items\n\n\n\n\nReadings\n\n\n\n\n\n\nSections 2.4 from equation 2.13 on page 38 of the main text by (Ringrose 2020) until section 2.5\n\n\nSection 2.5.2 and 2.5.4 of the main text by (Ringrose 2020)\n\n\nSections 2.6 and 2.7 of the main text by (Ringrose 2020)\n\n\nJutulDarcy.jl - a fully differentiable high-performance reservoir simulator based on automatic differentiation until section 2.1\n\n\n\n\n\n\n\n\n\nReferences\n\nRingrose, Philip. 2020. How to Store CO2 Underground: Insights from Early-Mover CCS Projects. Springer. https://link.springer.com/book/10.1007/978-3-030-33113-9.\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "weeks/week-08.html",
    "href": "weeks/week-08.html",
    "title": "Week 08",
    "section": "",
    "text": "Lectures\n\n\n\n\n\nTopic\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nLecture 14 — Basics Seismic Imaging I\n\n\nAcquisition and Gathers\n\n\nMon, Mar 03\n\n\n\n\n\nNo matching items\n\n\n\n\nAssignments\n\n\n\n\n\nAssignment\n\n\nTitle\n\n\nDue\n\n\n\n\n\n\n\nNo matching items\n\n\n\n\nReadings\n\n\n\n\n\n\nChapters 1, 2 Theory of Seismic Imaging by John Scales\n\n\nChapters 5 Introduction to Reflection Seismology TA3520 by Guy Drijkoningen\n\n\nChapters 1,2,3 Seismic Data Processing by Guy Drijkoningen\n\n\nPractice midterm\n\n\n\n\n\n\n\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "labs/04-week.html",
    "href": "labs/04-week.html",
    "title": "Intro Reservoir Simulations",
    "section": "",
    "text": "Notebook is shown top right. Download and rerun it and answer questions.\n\n\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "labs/04-week/CCS8803_HW2.html",
    "href": "labs/04-week/CCS8803_HW2.html",
    "title": "Questions",
    "section": "",
    "text": "# The packages necessary for running the code below\nusing PyPlot, LinearAlgebra, JLD2, Polynomials, JutulDarcyRules\n\n\n# For the first time, run this cell twice to download data and then load the data\nif ~isfile(\"BGCompass_tti.jld2\")\n    run(`wget -q -O BGCompass_tti.jld2 \"https://www.dropbox.com/scl/fi/gs0eh2ldv9til0r7cg27n/BGCompass_tti.jld2?rlkey=bs2sil1ljiztl5bytlqghcm82&st=s5dnrjoh&dl=1\"`)\nelse\n    JLD2.@load \"BGCompass_tti.jld2\" m d\nend\n\n2-element Vector{Symbol}:\n :m\n :d\n\n\n\n# Some necessary type conversions and defining size of velocity\nv = Float64.(sqrt.(1f0./m));\nd = Float64.(d);\nn = size(v)\n\n(325, 171)\n\n\n\n# A basic function to find water bottom layer index values (You do not need to modify this)\nfunction find_water_bottom(m::AbstractArray{avDT,2};eps = 1e-4) where {avDT}\n    # return the indices of the water bottom of a seismic image\n    n = size(m)\n    idx = zeros(Integer, n[1])\n    for j=1:n[1]\n        k=1\n        while true\n            if abs(m[j,k]) &gt; eps\n                idx[j] = k\n                break\n            end\n            k += 1\n        end\n    end\n    return idx\nend\n\n# Changing velocity model to permeability\nfunction VtoK(v::Matrix{T}, d::Tuple{T, T}; α::T=T(10)) where T\n\n    n = size(v)\n    idx_wb = find_water_bottom(v.-minimum(v))\n    idx_ucfmt = find_water_bottom((v.-T(3.5)).*(v.&gt;T(3.5)))\n    Kh = zeros(T, n)\n    capgrid = Int(round(T(50)/d[2]))\n    for i = 1:n[1]\n        Kh[i,1:idx_wb[i]-1] .= T(1e-10)  # water layer\n        Kh[i,idx_wb[i]:idx_ucfmt[i]-capgrid-1] .= α*exp.(v[i,idx_wb[i]:idx_ucfmt[i]-capgrid-1])\n        Kh[i,idx_ucfmt[i]-capgrid:idx_ucfmt[i]-1] .= T(1e-3)\n        Kh[i,idx_ucfmt[i]:end] .= α*exp.(v[i,idx_ucfmt[i]:end]) .- T(320)\n    end\n    return Kh\nend\nKh = VtoK(v, d);\n\n# This part is used to create priority (You do not need to modify this)\nidx_wb = find_water_bottom(v.-minimum(v));\nidx_ucfmt = find_water_bottom((v.-3.5).*(v.&gt;3.5))\nphi = zeros(Float64,n)\nfor i = 1:n[1]\n    for j = 1:n[2]\n        p = Polynomial([-0.0314^2*Kh[i,j],2*0.0314^2*Kh[i,j],-0.0314^2*Kh[i,j],1.527^2]) \n        phi[i,j] = minimum(real(roots(p)[findall(real(roots(p)).== roots(p))]))\n    end\n    for j = idx_ucfmt[i]:idx_ucfmt[i]+8\n        phi[i,idx_ucfmt[i]:idx_ucfmt[i]+8] = Float64.(range(0.056,stop=0.1,length=9))\n    end\nend\n\n\n# We will use a subset of permeability model to make simulation faster .\nKh = Kh[151:240, :]\nK = Float64.(Kh * JutulDarcyRules.md);\nn = (size(K,1), 1, size(K,2))\nd = (d[1], 50.0, d[2])\nphi = phi[151:240, :]\nphi_m = convert(Array{Float64,1},vec(phi));\nϕ = phi\n\n# We set boundary values of porosity to 1e8. This will prevent over pressurization.\nϕ[1,:] .= 1e8\nϕ[:,1] .= 1e8\nϕ[end,:] .= 1e8\nϕ[:,end] .= 1e8\nϕ = convert(Array{Float64,1},vec(ϕ));\n\n\n# Plot permeability map \nimshow(Kh', extent = [0, size(Kh,1) *d[1], size(Kh,2) *d[3], 0]); colorbar(); xlabel(\"Width [m]\"); ylabel(\"Depth [m]\"); title(\"Permeability in Darcy\")\n\n\n\n\n\n\n\n\nPyObject Text(0.5, 1.0, 'Permeability in Darcy')\n\n\n\n# Create the model\nmodel = jutulModel(n, d, ϕ, K1to3(K))\n\njutulModel{3, Float64}((90, 1, 171), (12.5, 50.0, 12.5), [1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8  …  1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8], [9.86923266716013e-26 9.86923266716013e-26 … 2.436621876880626e-13 2.351440606894287e-13; 9.86923266716013e-26 9.86923266716013e-26 … 2.436621876880626e-13 2.351440606894287e-13; 9.86923266716013e-26 9.86923266716013e-26 … 2.436621876880626e-13 2.351440606894287e-13], 0.0)\n\n\n\n# simulation time steppings (30 days between 2 time samples)\ntstep = 30 * ones(100) # This corresponds to 3000 days. 30 is dt and 100 is number of time steps. Keep dt small for stability of solution\ntot_time = sum(tstep)\n\n## injection & production (source & sink) location\ninj_loc = (5, 1, n[end]-10) .* d\nprod_loc = (n[1]-3, 1, n[end]-10) .* d\n\n# injectivity is in m^3 per sec\nirate = 5e-2\nq = jutulForce(irate, [inj_loc, prod_loc])\n\n## set up modeling operator\nS = jutulModeling(model, tstep)\n\n## simulation\nmesh = CartesianMesh(model)\nT(x) = log.(KtoTrans(mesh, K1to3(exp.(x))))\nlogK = log.(K)\n@time state = S(T(logK), q; info_level=1)\n\nJutul: Simulating 428 weeks, 4 days as 100 report steps\nStep   1/100: Solving start to 4 weeks, 2 days, Δt = 4 weeks, 2 days \nStep   2/100: Solving 4 weeks, 2 days to 8 weeks, 4 days, Δt = 4 weeks, 2 days \nStep   3/100: Solving 8 weeks, 4 days to 12 weeks, 6 days, Δt = 4 weeks, 2 days \nStep   4/100: Solving 12 weeks, 6 days to 17 weeks, 1 day, Δt = 4 weeks, 2 days \nStep   5/100: Solving 17 weeks, 1 day to 21 weeks, 3 days, Δt = 4 weeks, 2 days \nStep   6/100: Solving 21 weeks, 3 days to 25 weeks, 5 days, Δt = 4 weeks, 2 days \nStep   7/100: Solving 25 weeks, 5 days to 30 weeks, Δt = 4 weeks, 2 days \nStep   8/100: Solving 30 weeks to 34 weeks, 2 days, Δt = 4 weeks, 2 days \nStep   9/100: Solving 34 weeks, 2 days to 38 weeks, 4 days, Δt = 4 weeks, 2 days \nStep  10/100: Solving 38 weeks, 4 days to 42 weeks, 6 days, Δt = 4 weeks, 2 days \nStep  11/100: Solving 42 weeks, 6 days to 47 weeks, 1 day, Δt = 4 weeks, 2 days \nStep  12/100: Solving 47 weeks, 1 day to 51 weeks, 3 days, Δt = 4 weeks, 2 days \nStep  13/100: Solving 51 weeks, 3 days to 55 weeks, 5 days, Δt = 4 weeks, 2 days \nStep  14/100: Solving 55 weeks, 5 days to 60 weeks, Δt = 4 weeks, 2 days \nStep  15/100: Solving 60 weeks to 64 weeks, 2 days, Δt = 4 weeks, 2 days \nStep  16/100: Solving 64 weeks, 2 days to 68 weeks, 4 days, Δt = 4 weeks, 2 days \nStep  17/100: Solving 68 weeks, 4 days to 72 weeks, 6 days, Δt = 4 weeks, 2 days \nStep  18/100: Solving 72 weeks, 6 days to 77 weeks, 1 day, Δt = 4 weeks, 2 days \nStep  19/100: Solving 77 weeks, 1 day to 81 weeks, 3 days, Δt = 4 weeks, 2 days \nStep  20/100: Solving 81 weeks, 3 days to 85 weeks, 5 days, Δt = 4 weeks, 2 days \nStep  21/100: Solving 85 weeks, 5 days to 90 weeks, Δt = 4 weeks, 2 days \nStep  22/100: Solving 90 weeks to 94 weeks, 2 days, Δt = 4 weeks, 2 days \nStep  23/100: Solving 94 weeks, 2 days to 98 weeks, 4 days, Δt = 4 weeks, 2 days \nStep  24/100: Solving 98 weeks, 4 days to 102 weeks, 6 days, Δt = 4 weeks, 2 days \nStep  25/100: Solving 102 weeks, 6 days to 107 weeks, 1 day, Δt = 4 weeks, 2 days \nStep  26/100: Solving 107 weeks, 1 day to 111 weeks, 3 days, Δt = 4 weeks, 2 days \nStep  27/100: Solving 111 weeks, 3 days to 115 weeks, 5 days, Δt = 4 weeks, 2 days \nStep  28/100: Solving 115 weeks, 5 days to 120 weeks, Δt = 4 weeks, 2 days \nStep  29/100: Solving 120 weeks to 124 weeks, 2 days, Δt = 4 weeks, 2 days \nStep  30/100: Solving 124 weeks, 2 days to 128 weeks, 4 days, Δt = 4 weeks, 2 days \nStep  31/100: Solving 128 weeks, 4 days to 132 weeks, 6 days, Δt = 4 weeks, 2 days \nStep  32/100: Solving 132 weeks, 6 days to 137 weeks, 1 day, Δt = 4 weeks, 2 days \nStep  33/100: Solving 137 weeks, 1 day to 141 weeks, 3 days, Δt = 4 weeks, 2 days \nStep  34/100: Solving 141 weeks, 3 days to 145 weeks, 5 days, Δt = 4 weeks, 2 days \nStep  35/100: Solving 145 weeks, 5 days to 150 weeks, Δt = 4 weeks, 2 days \nStep  36/100: Solving 150 weeks to 154 weeks, 2 days, Δt = 4 weeks, 2 days \nStep  37/100: Solving 154 weeks, 2 days to 158 weeks, 4 days, Δt = 4 weeks, 2 days \nStep  38/100: Solving 158 weeks, 4 days to 162 weeks, 6 days, Δt = 4 weeks, 2 days \nStep  39/100: Solving 162 weeks, 6 days to 167 weeks, 1 day, Δt = 4 weeks, 2 days \nStep  40/100: Solving 167 weeks, 1 day to 171 weeks, 3 days, Δt = 4 weeks, 2 days \nStep  41/100: Solving 171 weeks, 3 days to 175 weeks, 5 days, Δt = 4 weeks, 2 days \nStep  42/100: Solving 175 weeks, 5 days to 180 weeks, Δt = 4 weeks, 2 days \nStep  43/100: Solving 180 weeks to 184 weeks, 2 days, Δt = 4 weeks, 2 days \nStep  44/100: Solving 184 weeks, 2 days to 188 weeks, 4 days, Δt = 4 weeks, 2 days \nStep  45/100: Solving 188 weeks, 4 days to 192 weeks, 6 days, Δt = 4 weeks, 2 days \nStep  46/100: Solving 192 weeks, 6 days to 197 weeks, 1 day, Δt = 4 weeks, 2 days \nStep  47/100: Solving 197 weeks, 1 day to 201 weeks, 3 days, Δt = 4 weeks, 2 days \nStep  48/100: Solving 201 weeks, 3 days to 205 weeks, 5 days, Δt = 4 weeks, 2 days \nStep  49/100: Solving 205 weeks, 5 days to 210 weeks, Δt = 4 weeks, 2 days \nStep  50/100: Solving 210 weeks to 214 weeks, 2 days, Δt = 4 weeks, 2 days \nStep  51/100: Solving 214 weeks, 2 days to 218 weeks, 4 days, Δt = 4 weeks, 2 days \nStep  52/100: Solving 218 weeks, 4 days to 222 weeks, 6 days, Δt = 4 weeks, 2 days \nStep  53/100: Solving 222 weeks, 6 days to 227 weeks, 1 day, Δt = 4 weeks, 2 days \nStep  54/100: Solving 227 weeks, 1 day to 231 weeks, 3 days, Δt = 4 weeks, 2 days \nStep  55/100: Solving 231 weeks, 3 days to 235 weeks, 5 days, Δt = 4 weeks, 2 days \nStep  56/100: Solving 235 weeks, 5 days to 240 weeks, Δt = 4 weeks, 2 days \nStep  57/100: Solving 240 weeks to 244 weeks, 2 days, Δt = 4 weeks, 2 days \nStep  58/100: Solving 244 weeks, 2 days to 248 weeks, 4 days, Δt = 4 weeks, 2 days \nStep  59/100: Solving 248 weeks, 4 days to 252 weeks, 6 days, Δt = 4 weeks, 2 days \nStep  60/100: Solving 252 weeks, 6 days to 257 weeks, 1 day, Δt = 4 weeks, 2 days \nStep  61/100: Solving 257 weeks, 1 day to 261 weeks, 3 days, Δt = 4 weeks, 2 days \nStep  62/100: Solving 261 weeks, 3 days to 265 weeks, 5 days, Δt = 4 weeks, 2 days \nStep  63/100: Solving 265 weeks, 5 days to 270 weeks, Δt = 4 weeks, 2 days \nStep  64/100: Solving 270 weeks to 274 weeks, 2 days, Δt = 4 weeks, 2 days \nStep  65/100: Solving 274 weeks, 2 days to 278 weeks, 4 days, Δt = 4 weeks, 2 days \nStep  66/100: Solving 278 weeks, 4 days to 282 weeks, 6 days, Δt = 4 weeks, 2 days \nStep  67/100: Solving 282 weeks, 6 days to 287 weeks, 1 day, Δt = 4 weeks, 2 days \nStep  68/100: Solving 287 weeks, 1 day to 291 weeks, 3 days, Δt = 4 weeks, 2 days \nStep  69/100: Solving 291 weeks, 3 days to 295 weeks, 5 days, Δt = 4 weeks, 2 days \nStep  70/100: Solving 295 weeks, 5 days to 300 weeks, Δt = 4 weeks, 2 days \nStep  71/100: Solving 300 weeks to 304 weeks, 2 days, Δt = 4 weeks, 2 days \nStep  72/100: Solving 304 weeks, 2 days to 308 weeks, 4 days, Δt = 4 weeks, 2 days \nStep  73/100: Solving 308 weeks, 4 days to 312 weeks, 6 days, Δt = 4 weeks, 2 days \nStep  74/100: Solving 312 weeks, 6 days to 317 weeks, 1 day, Δt = 4 weeks, 2 days \nStep  75/100: Solving 317 weeks, 1 day to 321 weeks, 3 days, Δt = 4 weeks, 2 days \nStep  76/100: Solving 321 weeks, 3 days to 325 weeks, 5 days, Δt = 4 weeks, 2 days \nStep  77/100: Solving 325 weeks, 5 days to 330 weeks, Δt = 4 weeks, 2 days \nStep  78/100: Solving 330 weeks to 334 weeks, 2 days, Δt = 4 weeks, 2 days \nStep  79/100: Solving 334 weeks, 2 days to 338 weeks, 4 days, Δt = 4 weeks, 2 days \nStep  80/100: Solving 338 weeks, 4 days to 342 weeks, 6 days, Δt = 4 weeks, 2 days \nStep  81/100: Solving 342 weeks, 6 days to 347 weeks, 1 day, Δt = 4 weeks, 2 days \nStep  82/100: Solving 347 weeks, 1 day to 351 weeks, 3 days, Δt = 4 weeks, 2 days \nStep  83/100: Solving 351 weeks, 3 days to 355 weeks, 5 days, Δt = 4 weeks, 2 days \nStep  84/100: Solving 355 weeks, 5 days to 360 weeks, Δt = 4 weeks, 2 days \nStep  85/100: Solving 360 weeks to 364 weeks, 2 days, Δt = 4 weeks, 2 days \nStep  86/100: Solving 364 weeks, 2 days to 368 weeks, 4 days, Δt = 4 weeks, 2 days \nStep  87/100: Solving 368 weeks, 4 days to 372 weeks, 6 days, Δt = 4 weeks, 2 days \nStep  88/100: Solving 372 weeks, 6 days to 377 weeks, 1 day, Δt = 4 weeks, 2 days \nStep  89/100: Solving 377 weeks, 1 day to 381 weeks, 3 days, Δt = 4 weeks, 2 days \nStep  90/100: Solving 381 weeks, 3 days to 385 weeks, 5 days, Δt = 4 weeks, 2 days \nStep  91/100: Solving 385 weeks, 5 days to 390 weeks, Δt = 4 weeks, 2 days \nStep  92/100: Solving 390 weeks to 394 weeks, 2 days, Δt = 4 weeks, 2 days \nStep  93/100: Solving 394 weeks, 2 days to 398 weeks, 4 days, Δt = 4 weeks, 2 days \nStep  94/100: Solving 398 weeks, 4 days to 402 weeks, 6 days, Δt = 4 weeks, 2 days \nStep  95/100: Solving 402 weeks, 6 days to 407 weeks, 1 day, Δt = 4 weeks, 2 days \nStep  96/100: Solving 407 weeks, 1 day to 411 weeks, 3 days, Δt = 4 weeks, 2 days \nStep  97/100: Solving 411 weeks, 3 days to 415 weeks, 5 days, Δt = 4 weeks, 2 days \nStep  98/100: Solving 415 weeks, 5 days to 420 weeks, Δt = 4 weeks, 2 days \nStep  99/100: Solving 420 weeks to 424 weeks, 2 days, Δt = 4 weeks, 2 days \nStep 100/100: Solving 424 weeks, 2 days to 428 weeks, 4 days, Δt = 4 weeks, 2 days \nSimulation complete: Completed 100 timesteps in 5 minutes, 28 seconds, 391 milliseconds and 467 iterations.\n╭────────────────┬───────────┬───────────────┬──────────┬──────────╮\n│ Iteration type │  Avg/step │  Avg/ministep │ Time per │    Total │\n│                │ 100 steps │ 112 ministeps │       ms │ (wasted) │\n├────────────────┼───────────┼───────────────┼──────────┼──────────┤\n│ Newton         │      4.67 │       4.16964 │ 703.1921 │  467 (0) │\n│ Linearization  │      5.79 │       5.16964 │ 567.1688 │  579 (0) │\n│ Linear solver  │     12.37 │       11.0446 │ 265.4735 │ 1237 (0) │\n╰────────────────┴───────────┴───────────────┴──────────┴──────────╯\n╭────────────────┬──────────┬────────────┬──────────╮\n│ Timing type    │     Each │   Relative │    Total │\n│                │       ms │ Percentage │        s │\n├────────────────┼──────────┼────────────┼──────────┤\n│ Properties     │   7.6169 │     1.08 % │   3.5571 │\n│ Equations      │  94.8596 │    16.73 % │  54.9237 │\n│ Assembly       │  48.4451 │     8.54 % │  28.0497 │\n│ Linear solve   │ 276.8640 │    39.37 % │ 129.2955 │\n│ Preconditioner │ 137.7440 │    19.59 % │  64.3265 │\n│ Update         │  39.5927 │     5.63 % │  18.4898 │\n│ Convergence    │  19.0519 │     3.36 % │  11.0310 │\n│ Input/Output   │   4.0826 │     0.14 % │   0.4572 │\n│ Other          │  39.1010 │     5.56 % │  18.2602 │\n├────────────────┼──────────┼────────────┼──────────┤\n│ Total          │ 703.1921 │   100.00 % │ 328.3907 │\n╰────────────────┴──────────┴────────────┴──────────╯\n752.044001 seconds (217.33 M allocations: 14.673 GiB, 0.97% gc time, 80.64% compilation time: 4% of which was recompilation)\n\n\n3078000-element jutulStates{Float64}:\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n ⋮\n 2.1359426506710764e7\n 2.1358564024889007e7\n 2.135696962880001e7\n 2.135525710614737e7\n 2.135422023336592e7\n 2.135430011237757e7\n 2.135544957914724e7\n 2.135648684846326e7\n 2.1359060922351018e7\n 2.1362910749874525e7\n 2.1367560687066786e7\n 2.137222020299839e7\n\n\n\n# CO2 saturation snapshots\nfigure(figsize=(20,12));\nobs=Int.(round.(range(1, stop=100, length=9))); # 9 observed time samples\nfor i = 1:9\n    subplot(3,3,i)\n    imshow(reshape(Saturations(state.states[obs[i]]), n[1], n[end])', extent=(0,(n[1]-1)*d[1],(n[3]-1)*d[3],0); vmin=0, vmax=maximum(Saturations(state.states[end])))\n    xlabel(\"X [m]\");ylabel(\"Depth [m]\");\n    colorbar()\nend\nsuptitle(\"CO2 saturation snapshots at approx 333 days interval \")\n\n\n\n\n\n\n\n\nPyObject Text(0.5, 0.98, 'CO2 saturation snapshots at approx 333 days interval ')\n\n\n\nfig=figure(figsize=(20,12));\n#Plot Saturation at the end\nsubplot(1,2,1);\nimshow(reshape(Saturations(state.states[end]), n[1], n[end])', extent=(0,(n[1]-1)*d[1],(n[3]-1)*d[3],0); vmin=0, vmax=maximum(Saturations(state.states[end]))); colorbar(); title(\"Saturation After 3k days\")\nxlabel(\"X [km]\");ylabel(\"Depth [km]\");\nscatter(inj_loc[1],inj_loc[3])\nscatter(prod_loc[1],inj_loc[3])\nlegend([\"Injection loc\",\"Production loc\"])\n\n#Plot Pressure at the end\nsubplot(1,2,2);\nimshow(reshape(Pressure(state.states[end]), n[1], n[end])', extent=(0,(n[1]-1)*d[1],(n[3]-1)*d[3],0); vmin=0, vmax=maximum(Pressure(state.states[end]))); colorbar(); title(\"Pressure After 3k days\")\nxlabel(\"X [km]\");ylabel(\"Depth [km]\");\nscatter(inj_loc[1],inj_loc[3])\nscatter(prod_loc[1],inj_loc[3])\nlegend([\"Injection loc\",\"Production loc\"])\n\n\n\n\n\n\n\n\nPyObject &lt;matplotlib.legend.Legend object at 0x2aac4123e9c0&gt;\n\n\n\nmaximum(Saturations(state.states[end]))\n\n0.8984886621298521\n\n\n\n# Save saturation and pressure data in JLD2 format\nJLD2.@save \"example_sat_press.jld2\" state\n\nQ1) What do you see in the time-varying CO2 saturation snapshots? How do you interpret the movement of CO2? What role does production well playing here? (20 marks)\nQ2) What role does production well playing here? (20 marks)\nQ2) The above experiment is for 3k days. Re-run the experiment for different times such as 1k, 2k, 4k, and 5k days. Show saturation and pressure maps for these days. Show total 8 images. (40 marks)\nQ3) (a) Calculate the amount of CO2 in the reservoir after 300 days of injection. (10 marks)\nQ3) (b) Calculate the amount of CO2 in the reservoir at the end of injection. (10 marks)\n(Hint: sum(state.states[write array index].Saturations.phi_m)prod(model.d))\nQ4) Play with the seal region of permeability map to create a fault (very high permeability 500 mD say) in small region of seal. Re-run the experiment to see if CO2 leaks out from the seal. Showing saturation map is enough here. (Bonus 10 point)\n\n\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "labs/05-week/CCS8803_HW3.html",
    "href": "labs/05-week/CCS8803_HW3.html",
    "title": "Question",
    "section": "",
    "text": "The packages necessary for the simulation.\n\nusing PyPlot, JutulDarcyRules, LinearAlgebra, JLD2, Polynomials\n\n\n# For the first time, run this cell twice to download data and then load the data\nif ~isfile(\"BGCompass_tti.jld2\")\n    run(`wget -q -O BGCompass_tti.jld2 \"https://www.dropbox.com/scl/fi/gs0eh2ldv9til0r7cg27n/BGCompass_tti.jld2?rlkey=bs2sil1ljiztl5bytlqghcm82&st=s5dnrjoh&dl=1\"`)\nelse\n    JLD2.@load \"BGCompass_tti.jld2\" m d\nend\n\n2-element Vector{Symbol}:\n :m\n :d\n\n\n\n# Some necessary type conversions and defining size of velocity\nv = Float64.(sqrt.(1f0./m));\nd = Float64.(d);\nn = size(v)\n\n(325, 171)\n\n\n\n# You do not need to modify this code block, which defines the helper function\n# A basic function to find water bottom layer index values \nfunction find_water_bottom(m::AbstractArray{avDT,2};eps = 1e-4) where {avDT}\n    # return the indices of the water bottom of a seismic image\n    n = size(m)\n    idx = zeros(Integer, n[1])\n    for j=1:n[1]\n        k=1\n        while true\n            if abs(m[j,k]) &gt; eps\n                idx[j] = k\n                break\n            end\n            k += 1\n        end\n    end\n    return idx\nend\n\n# Changing velocity model to permeability\nfunction VtoK(v::Matrix{T}, d::Tuple{T, T}; α::T=T(10)) where T\n\n    n = size(v)\n    idx_wb = find_water_bottom(v.-minimum(v))\n    idx_ucfmt = find_water_bottom((v.-T(3.5)).*(v.&gt;T(3.5)))\n    Kh = zeros(T, n)\n    capgrid = Int(round(T(50)/d[2]))\n    for i = 1:n[1]\n        Kh[i,1:idx_wb[i]-1] .= T(1e-10)  # water layer\n        Kh[i,idx_wb[i]:idx_ucfmt[i]-capgrid-1] .= α*exp.(v[i,idx_wb[i]:idx_ucfmt[i]-capgrid-1])\n        Kh[i,idx_ucfmt[i]-capgrid:idx_ucfmt[i]-1] .= T(1e-3)\n        Kh[i,idx_ucfmt[i]:end] .= α*exp.(v[i,idx_ucfmt[i]:end]) .- T(320)\n    end\n    return Kh\nend\nKh = VtoK(v, d);\n\n# This part is used to create porosity \nidx_wb = find_water_bottom(v.-minimum(v));\nidx_ucfmt = find_water_bottom((v.-3.5).*(v.&gt;3.5))\nphi = zeros(Float64,n)\nfor i = 1:n[1]\n    for j = 1:n[2]\n        p = Polynomial([-0.0314^2*Kh[i,j],2*0.0314^2*Kh[i,j],-0.0314^2*Kh[i,j],1.527^2]) \n        phi[i,j] = minimum(real(roots(p)[findall(real(roots(p)).== roots(p))]))\n    end\n    for j = idx_ucfmt[i]:idx_ucfmt[i]+8\n        phi[i,idx_ucfmt[i]:idx_ucfmt[i]+8] = Float64.(range(0.056,stop=0.1,length=9))\n    end\nend\n\n\n# We will use a subset of the permeability model to make simulation faster.\nKh = Kh[151:240, :]\nK = Float64.(Kh * md);\nn = (size(K,1), 1, size(K,2))\nd = (d[1], 50.0, d[2])\nphi = phi[151:240, :]\nphi_m = convert(Array{Float64,1},vec(phi));\nϕ = phi\n\n# We set boundary values of porosity to 1e8. This will prevent over-pressurization.\nϕ[1,:] .= 1e8\nϕ[:,1] .= 1e8\nϕ[end,:] .= 1e8\nϕ[:,end] .= 1e8\nϕ = convert(Array{Float64,1},vec(ϕ));\n\n\n# Plot permeability map \ni=10\nimshow(Kh'); colorbar(); xlabel(\"Width [12.5m]\"); ylabel(\"Depth [12.5m]\"); title(\"Permeability in Darcy (Grids size 12.5m)\")\nscatter(i,idx_ucfmt[i+150], c= \"k\")\n\n\n\n\n\n\n\n\nPyObject &lt;matplotlib.collections.PathCollection object at 0x2aabfd77e300&gt;\n\n\n\n# Create the model\nmodel = jutulModel(n, d, ϕ, K1to3(K))\n\njutulModel{3, Float64}((90, 1, 171), (12.5, 50.0, 12.5), [1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8  …  1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8], [9.86923266716013e-26 9.86923266716013e-26 … 2.436621876880626e-13 2.351440606894287e-13; 9.86923266716013e-26 9.86923266716013e-26 … 2.436621876880626e-13 2.351440606894287e-13; 9.86923266716013e-26 9.86923266716013e-26 … 2.436621876880626e-13 2.351440606894287e-13], 0.0)\n\n\n\n# Simulation\ntstep = 500 * ones(2) # This corresponds to 1000 days. 500 is dt and 2 is number of time steps. \n\n# Injection & production (source & sink) location\ninj_loc = (5, 1, n[end]-10) .* d\n\n# Injectivity is in m^3 per sec\nirate = 8e-1\nq1 = jutulForce(irate, [inj_loc])\n\n# Set up modeling operator\nS = jutulModeling(model, tstep)\nTrans = KtoTrans(CartesianMesh(model), K1to3(K))\n\n30519-element Vector{Float64}:\n 4.934616333580065e-24\n 4.934616333580065e-24\n 4.934616333580065e-24\n 4.934616333580065e-24\n 4.934616333580065e-24\n 4.934616333580065e-24\n 4.934616333580065e-24\n 4.934616333580065e-24\n 4.934616333580065e-24\n 4.934616333580065e-24\n 4.934616333580065e-24\n 4.934616333580065e-24\n 4.934616333580065e-24\n ⋮\n 1.1972388010575527e-11\n 1.108071705063072e-11\n 1.1610390486326076e-11\n 1.2174659406879921e-11\n 1.2312219438636536e-11\n 1.1962770008765545e-11\n 1.127970625447385e-11\n 1.1955957535180821e-11\n 1.2019857324186095e-11\n 1.203614465756906e-11\n 1.2151810830393084e-11\n 1.1941790969387475e-11\n\n\n\n# First Step\n@time state = S(log.(Trans), q1; info_level=1)\n\npressure = reshape(Pressure(state.states[end]), (n[1], n[end]))'\npoint_pressure = pressure[idx_ucfmt[20+150],20]\nprintln(\"Did you satisfy pressure criteria: \", (point_pressure &gt; 1.3e7 && (point_pressure &lt; 1.5e7)))\nprintln(\"Pressure below seal for a specific point: \", point_pressure)\n@assert(point_pressure &gt; 1.3e7 && (point_pressure &lt; 1.5e7))\n\nJutul: Simulating 142 weeks, 6 days as 2 report steps\nStep 1/2: Solving start to 71 weeks, 3 days, Δt = 71 weeks, 3 days \nStep 2/2: Solving 71 weeks, 3 days to 142 weeks, 6 days, Δt = 71 weeks, 3 days \nSimulation complete: Completed 2 timesteps in 4 minutes, 1 second, 503 milliseconds and 152 iterations.\n╭────────────────┬──────────┬──────────────┬──────────┬──────────╮\n│ Iteration type │ Avg/step │ Avg/ministep │ Time per │    Total │\n│                │  2 steps │ 27 ministeps │        s │ (wasted) │\n├────────────────┼──────────┼──────────────┼──────────┼──────────┤\n│ Newton         │     76.0 │      5.62963 │   1.5888 │  152 (0) │\n│ Linearization  │     89.5 │      6.62963 │   1.3492 │  179 (0) │\n│ Linear solver  │    172.0 │      12.7407 │   0.7020 │  344 (0) │\n╰────────────────┴──────────┴──────────────┴──────────┴──────────╯\n╭────────────────┬────────┬────────────┬──────────╮\n│ Timing type    │   Each │   Relative │    Total │\n│                │      s │ Percentage │        s │\n├────────────────┼────────┼────────────┼──────────┤\n│ Properties     │ 0.0089 │     0.56 % │   1.3584 │\n│ Equations      │ 0.2311 │    17.13 % │  41.3696 │\n│ Assembly       │ 0.1434 │    10.63 % │  25.6700 │\n│ Linear solve   │ 0.4801 │    30.22 % │  72.9754 │\n│ Preconditioner │ 0.3753 │    23.62 % │  57.0432 │\n│ Update         │ 0.1033 │     6.50 % │  15.7017 │\n│ Convergence    │ 0.0549 │     4.07 % │   9.8309 │\n│ Input/Output   │ 0.0073 │     0.08 % │   0.1970 │\n│ Other          │ 0.1142 │     7.19 % │  17.3565 │\n├────────────────┼────────┼────────────┼──────────┤\n│ Total          │ 1.5888 │   100.00 % │ 241.5027 │\n╰────────────────┴────────┴────────────┴──────────╯\n671.132042 seconds (211.54 M allocations: 12.734 GiB, 0.88% gc time, 92.83% compilation time: 4% of which was recompilation)\nDid you satisfy pressure criteria: true\nPressure below seal for a specific point: 1.4675225272908453e7\n\n\n\n# Plot first-step saturation results\nfigure(figsize=(20,12));\nfor i = 1:2\n    subplot(1,2,i)\n    imshow(reshape(Saturations(state.states[i]), n[1], n[end])', extent=(0,(n[1]-1)*d[1],(n[3]-1)*d[3],0); vmin=0, vmax=maximum(Saturations(state.states[end])))\n    xlabel(\"X [m]\");ylabel(\"Depth [m]\");\n    colorbar()\nend\nsuptitle(\"CO2 saturation snapshots at 500 days interval\")\n\n\n\n\n\n\n\n\nPyObject Text(0.5, 0.98, 'CO2 saturation snapshots at 500 days interval')\n\n\n\n# Second Step\n# Keep injection rate as high as possible but also consider the pressure criterion\nirate = 9e-1\nq2 = jutulForce(irate, [inj_loc])\n\nstateend = state.states[end]\n@time state = S(log.(Trans), q2; state0=stateend)\npressure = reshape(Pressure(state.states[end]), (n[1], n[end]))'\npoint_pressure = pressure[idx_ucfmt[20+150],20]\nprintln(\"Did you satisfy pressure criteria: \", (point_pressure &gt; 1.3e7 && (point_pressure &lt; 1.5e7)))\nprintln(\"Pressure below seal for a specific point: \", point_pressure)\n@assert(point_pressure &gt; 1.3e7 && (point_pressure &lt; 1.5e7))\n\n╭────────────────┬──────────┬──────────────┬──────────┬──────────╮\n│ Iteration type │ Avg/step │ Avg/ministep │ Time per │    Total │\n│                │  2 steps │ 27 ministeps │       ms │ (wasted) │\n├────────────────┼──────────┼──────────────┼──────────┼──────────┤\n│ Newton         │     92.0 │      6.81481 │ 346.1495 │ 184 (15) │\n│ Linearization  │    105.5 │      7.81481 │ 301.8555 │ 211 (16) │\n│ Linear solver  │    297.5 │       22.037 │ 107.0445 │ 595 (45) │\n╰────────────────┴──────────┴──────────────┴──────────┴──────────╯\n╭────────────────┬──────────┬────────────┬─────────╮\n│ Timing type    │     Each │   Relative │   Total │\n│                │       ms │ Percentage │       s │\n├────────────────┼──────────┼────────────┼─────────┤\n│ Properties     │   9.2746 │     2.68 % │  1.7065 │\n│ Equations      │  38.6487 │    12.80 % │  8.1549 │\n│ Assembly       │   7.0589 │     2.34 % │  1.4894 │\n│ Linear solve   │ 215.7550 │    62.33 % │ 39.6989 │\n│ Preconditioner │  21.3098 │     6.16 % │  3.9210 │\n│ Update         │  11.1479 │     3.22 % │  2.0512 │\n│ Convergence    │  14.8162 │     4.91 % │  3.1262 │\n│ Input/Output   │   0.0565 │     0.00 % │  0.0015 │\n│ Other          │  19.2488 │     5.56 % │  3.5418 │\n├────────────────┼──────────┼────────────┼─────────┤\n│ Total          │ 346.1495 │   100.00 % │ 63.6915 │\n╰────────────────┴──────────┴────────────┴─────────╯\n 70.224398 seconds (11.88 M allocations: 1.145 GiB, 0.50% gc time, 8.92% compilation time)\nDid you satisfy pressure criteria: true\nPressure below seal for a specific point: 1.4896586683194598e7\n\n\n\n# Plot second-step saturation results\nfigure(figsize=(20,12));\nfor i = 1:2\n    subplot(1,2,i)\n    imshow(reshape(Saturations(state.states[i]), n[1], n[end])', extent=(0,(n[1]-1)*d[1],(n[3]-1)*d[3],0); vmin=0, vmax=maximum(Saturations(state.states[end])))\n    xlabel(\"X [m]\");ylabel(\"Depth [m]\");\n    colorbar()\nend\nsuptitle(\"CO2 saturation snapshots at 500 days interval\")\n\n\n\n\n\n\n\n\nPyObject Text(0.5, 0.98, 'CO2 saturation snapshots at 500 days interval')\n\n\n\n# Third Step\n# Keep injection rate as high as possible but also consider the pressure criterion\nirate = 50e-2\nq3 = jutulForce(irate, [inj_loc])\n\nstateend = state.states[end]\n@time state = S(log.(Trans), q3;state0=stateend)\npressure = reshape(Pressure(state.states[end]), (n[1], n[end]))'\npoint_pressure = pressure[idx_ucfmt[20+150],20]\nprintln(\"Did you satisfy pressure criteria: \", (point_pressure &gt; 1.3e7 && (point_pressure &lt; 1.5e7)))\nprintln(\"Pressure below seal for a specific point: \", point_pressure)\n@assert(point_pressure &gt; 1.3e7 && (point_pressure &lt; 1.5e7))\n\n╭────────────────┬──────────┬──────────────┬──────────┬──────────╮\n│ Iteration type │ Avg/step │ Avg/ministep │ Time per │    Total │\n│                │  2 steps │ 22 ministeps │       ms │ (wasted) │\n├────────────────┼──────────┼──────────────┼──────────┼──────────┤\n│ Newton         │     63.0 │      5.72727 │ 356.4619 │ 126 (15) │\n│ Linearization  │     74.0 │      6.72727 │ 303.4743 │ 148 (16) │\n│ Linear solver  │    241.5 │      21.9545 │  92.9901 │ 483 (75) │\n╰────────────────┴──────────┴──────────────┴──────────┴──────────╯\n╭────────────────┬──────────┬────────────┬─────────╮\n│ Timing type    │     Each │   Relative │   Total │\n│                │       ms │ Percentage │       s │\n├────────────────┼──────────┼────────────┼─────────┤\n│ Properties     │   9.6415 │     2.70 % │  1.2148 │\n│ Equations      │  37.3834 │    12.32 % │  5.5327 │\n│ Assembly       │   7.2643 │     2.39 % │  1.0751 │\n│ Linear solve   │ 252.9722 │    70.97 % │ 31.8745 │\n│ Preconditioner │  22.9132 │     6.43 % │  2.8871 │\n│ Update         │  11.4889 │     3.22 % │  1.4476 │\n│ Convergence    │   2.7040 │     0.89 % │  0.4002 │\n│ Input/Output   │   0.0491 │     0.00 % │  0.0011 │\n│ Other          │   3.8182 │     1.07 % │  0.4811 │\n├────────────────┼──────────┼────────────┼─────────┤\n│ Total          │ 356.4619 │   100.00 % │ 44.9142 │\n╰────────────────┴──────────┴────────────┴─────────╯\n 50.492253 seconds (9.63 M allocations: 959.609 MiB, 0.52% gc time, 0.07% compilation time)\nDid you satisfy pressure criteria: true\nPressure below seal for a specific point: 1.4947688279225362e7\n\n\n\n# Plot third-step saturation results\nfigure(figsize=(20,12));\nfor i = 1:2\n    subplot(1,2,i)\n    imshow(reshape(Saturations(state.states[i]), n[1], n[end])', extent=(0,(n[1]-1)*d[1],(n[3]-1)*d[3],0); vmin=0, vmax=maximum(Saturations(state.states[end])))\n    xlabel(\"X [m]\");ylabel(\"Depth [m]\");\n    colorbar()\nend\nsuptitle(\"CO2 saturation snapshots at 500 days interval\")\n\n\n\n\n\n\n\n\nPyObject Text(0.5, 0.98, 'CO2 saturation snapshots at 500 days interval')\n\n\n\n# Fourth Step\n# Keep injection rate as high as possible but also consider the pressure criterion\nirate = 50e-2\nq4 = jutulForce(irate, [inj_loc])\n\nstateend = state.states[end]\n@time state = S(log.(Trans), q4; state0=stateend)\npressure = reshape(Pressure(state.states[end]), (n[1], n[end]))'\npoint_pressure = pressure[idx_ucfmt[20+150],20]\nprintln(\"Did you satisfy pressure criteria: \", (point_pressure &gt; 1.3e7 && (point_pressure &lt; 1.5e7)))\nprintln(\"Pressure below seal for a specific point: \", point_pressure)\n@assert(point_pressure &gt; 1.3e7 && (point_pressure &lt; 1.5e7))\n\n╭────────────────┬──────────┬──────────────┬──────────┬──────────╮\n│ Iteration type │ Avg/step │ Avg/ministep │ Time per │    Total │\n│                │  2 steps │ 15 ministeps │       ms │ (wasted) │\n├────────────────┼──────────┼──────────────┼──────────┼──────────┤\n│ Newton         │     37.0 │      4.93333 │ 331.9071 │   74 (0) │\n│ Linearization  │     44.5 │      5.93333 │ 275.9677 │   89 (0) │\n│ Linear solver  │    126.0 │         16.8 │  97.4648 │  252 (0) │\n╰────────────────┴──────────┴──────────────┴──────────┴──────────╯\n╭────────────────┬──────────┬────────────┬─────────╮\n│ Timing type    │     Each │   Relative │   Total │\n│                │       ms │ Percentage │       s │\n├────────────────┼──────────┼────────────┼─────────┤\n│ Properties     │   9.3959 │     2.83 % │  0.6953 │\n│ Equations      │  38.8861 │    14.09 % │  3.4609 │\n│ Assembly       │   6.9455 │     2.52 % │  0.6182 │\n│ Linear solve   │ 223.7390 │    67.41 % │ 16.5567 │\n│ Preconditioner │  25.1439 │     7.58 % │  1.8607 │\n│ Update         │  10.8879 │     3.28 % │  0.8057 │\n│ Convergence    │   2.6224 │     0.95 % │  0.2334 │\n│ Input/Output   │   0.0683 │     0.00 % │  0.0010 │\n│ Other          │   4.4507 │     1.34 % │  0.3294 │\n├────────────────┼──────────┼────────────┼─────────┤\n│ Total          │ 331.9071 │   100.00 % │ 24.5611 │\n╰────────────────┴──────────┴────────────┴─────────╯\n 30.157022 seconds (9.50 M allocations: 819.029 MiB, 0.54% gc time)\nDid you satisfy pressure criteria: false\nPressure below seal for a specific point: 1.500183350607199e7\n\n\nLoadError: AssertionError: point_pressure &gt; 1.3e7 && point_pressure &lt; 1.5e7\nAssertionError: point_pressure &gt; 1.3e7 && point_pressure &lt; 1.5e7\n\nStacktrace:\n [1] top-level scope\n   @ In[15]:12\n\n\n\n# Plot fourth-step saturation results\nfigure(figsize=(20,12));\nfor i = 1:2\n    subplot(1,2,i)\n    imshow(reshape(Saturations(state.states[i]), n[1], n[end])', extent=(0,(n[1]-1)*d[1],(n[3]-1)*d[3],0); vmin=0, vmax=maximum(Saturations(state.states[end])))\n    xlabel(\"X [m]\");ylabel(\"Depth [m]\");\n    colorbar()\nend\nsuptitle(\"CO2 saturation snapshots at 500 days interval\")\n\n\n\n\n\n\n\n\nPyObject Text(0.5, 0.98, 'CO2 saturation snapshots at 500 days interval')\n\n\n\n# Fifth Step\n# Keep injection rate as high as possible but also consider the pressure criterion\nirate = 50e-2\nq5 = jutulForce(irate, [inj_loc])\n\nstateend = state.states[end]\n@time state = S(log.(Trans), q5; state0=stateend)\npressure = reshape(Pressure(state.states[end]), (n[1], n[end]))'\npoint_pressure = pressure[idx_ucfmt[20+150],20]\nprintln(\"Did you satisfy pressure criteria: \", (point_pressure &gt; 1.3e7 && (point_pressure &lt; 1.5e7)))\nprintln(\"Pressure below seal for a specific point: \", point_pressure)\n@assert(point_pressure &gt; 1.3e7 && (point_pressure &lt; 1.5e7))\n\n╭────────────────┬──────────┬──────────────┬──────────┬──────────╮\n│ Iteration type │ Avg/step │ Avg/ministep │ Time per │    Total │\n│                │  2 steps │ 10 ministeps │       ms │ (wasted) │\n├────────────────┼──────────┼──────────────┼──────────┼──────────┤\n│ Newton         │     16.0 │          3.2 │ 351.7340 │   32 (0) │\n│ Linearization  │     21.0 │          4.2 │ 267.9878 │   42 (0) │\n│ Linear solver  │     52.0 │         10.4 │ 108.2259 │  104 (0) │\n╰────────────────┴──────────┴──────────────┴──────────┴──────────╯\n╭────────────────┬──────────┬────────────┬─────────╮\n│ Timing type    │     Each │   Relative │   Total │\n│                │       ms │ Percentage │       s │\n├────────────────┼──────────┼────────────┼─────────┤\n│ Properties     │  11.8528 │     3.37 % │  0.3793 │\n│ Equations      │  37.8130 │    14.11 % │  1.5881 │\n│ Assembly       │   7.5397 │     2.81 % │  0.3167 │\n│ Linear solve   │ 220.3646 │    62.65 % │  7.0517 │\n│ Preconditioner │  37.6910 │    10.72 % │  1.2061 │\n│ Update         │  11.0407 │     3.14 % │  0.3533 │\n│ Convergence    │   2.7641 │     1.03 % │  0.1161 │\n│ Input/Output   │   0.1391 │     0.01 % │  0.0014 │\n│ Other          │   7.5882 │     2.16 % │  0.2428 │\n├────────────────┼──────────┼────────────┼─────────┤\n│ Total          │ 351.7340 │   100.00 % │ 11.2555 │\n╰────────────────┴──────────┴────────────┴─────────╯\n 16.834876 seconds (9.40 M allocations: 716.713 MiB, 1.07% gc time)\nDid you satisfy pressure criteria: false\nPressure below seal for a specific point: 1.5059112903287888e7\n\n\nLoadError: AssertionError: point_pressure &gt; 1.3e7 && point_pressure &lt; 1.5e7\nAssertionError: point_pressure &gt; 1.3e7 && point_pressure &lt; 1.5e7\n\nStacktrace:\n [1] top-level scope\n   @ In[17]:12\n\n\n\n# Plot fifth-step saturation results\nfigure(figsize=(20,12));\nfor i = 1:2\n    subplot(1,2,i)\n    imshow(reshape(Saturations(state.states[i]), n[1], n[end])', extent=(0,(n[1]-1)*d[1],(n[3]-1)*d[3],0); vmin=0, vmax=maximum(Saturations(state.states[end])))\n    xlabel(\"X [m]\");ylabel(\"Depth [m]\");\n    colorbar()\nend\nsuptitle(\"CO2 saturation snapshots at 500 days interval\")\n\n\n\n\n\n\n\n\nPyObject Text(0.5, 0.98, 'CO2 saturation snapshots at 500 days interval')\n\n\n\nQuestion\nThe goal of this homework is to maximize the volume of \\(CO_{2}\\) injected. There are 5 simulation steps with corresponding plots of saturation. Each step has an irate, which is the injection rate.\nIn each step, the simulation will check the pressure, if it is between 13 MPa and 15 MPa and will output true. If it is not in this range it will output false.\nThe code will also output the pressure value.\nStart from the first step, check the simulation output to be true or false, and then check the pressure value. If it is higher than 15 MPa, decrease irate in the next simulation step or vice versa.\nRepeat and run all the steps and calculate the total injected volume using the formula below.\nRemember, we need to maximize injectivity, so you may need to repeat the whole experiment with different irate for each step and see what combination of irate injects maximum CO2 to the reservoir without exceeding fracture pressure of 15 MPa.\n\nsum(Saturations(state.states[end]).*phi_m)*prod(model.d)\n\n2.7496925569029254e8\n\n\n\n\n\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "labs/05-week.html",
    "href": "labs/05-week.html",
    "title": "Reservoir simulations in Compass model",
    "section": "",
    "text": "Notebook is shown top right. Download and rerun it and answer questions.\n\n\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "weeks/week-09.html",
    "href": "weeks/week-09.html",
    "title": "Week 09",
    "section": "",
    "text": "Lectures\n\n\n\n\n\nTopic\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nLecture 15 — Basics Seismic Imaging II\n\n\nVelocity Building, Stacking, and Migration\n\n\nMon, Mar 03\n\n\n\n\n\nNo matching items\n\n\n\n\nAssignments\n\n\n\n\n\nAssignment\n\n\nTitle\n\n\nDue\n\n\n\n\n\n\n\nNo matching items\n\n\n\n\nReadings\n\n\n\n\n\n\nChapters 1, 2 Theory of Seismic Imaging by John Scales\n\n\nChapters 5 Introduction to Reflection Seismology TA3520 by Guy Drijkoningen\n\n\nChapters 1,2,3 Seismic Data Processing by Guy Drijkoningen\n\n\n\n\n\n\n\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "weeks/week-05.html",
    "href": "weeks/week-05.html",
    "title": "Week 05",
    "section": "",
    "text": "Lectures\n\n\n\n\n\nTopic\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nLecture 9 — Geomechanics & Pressure\n\n\nHandling pressure and well design\n\n\nWed, Feb 12\n\n\n\n\nLecture 8 — Injectivity & Geomechanics\n\n\ninjectivity & fracture pressure \n\n\nThu, Feb 13\n\n\n\n\n\nNo matching items\n\n\n\n\nAssignments\n\n\n\n\n\nAssignment\n\n\nTitle\n\n\nDue\n\n\n\n\n\n\nLab\n\n\nReservoir simulations in Compass model\n\n\nFri, Feb 21\n\n\n\n\n\nNo matching items\n\n\n\n\nReadings\n\n\n\n\n\n\nSections 2.6 and 2.7 of the main text by (Ringrose 2020)\n\n\nJutulDarcy.jl - a fully differentiable high-performance reservoir simulator based on automatic differentiation until section 2.1\n\n\n\n\n\n\n\n\n\nReferences\n\nRingrose, Philip. 2020. How to Store CO2 Underground: Insights from Early-Mover CCS Projects. Springer. https://link.springer.com/book/10.1007/978-3-030-33113-9.\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "weeks/week-06.html",
    "href": "weeks/week-06.html",
    "title": "Week 06",
    "section": "",
    "text": "Lectures\n\n\n\n\n\nTopic\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nLecture 10 — Handling Pressure\n\n\nPlacement, Transport, Management\n\n\nMon, Feb 17\n\n\n\n\nLecture 11 — Monitoring\n\n\nManagement & Monitoring\n\n\nWed, Feb 19\n\n\n\n\n\nNo matching items\n\n\n\n\nAssignments\n\n\n\n\n\nAssignment\n\n\nTitle\n\n\nDue\n\n\n\n\n\n\n\nNo matching items\n\n\n\n\nReadings\n\n\n\n\n\n\nSections 3.1-3.5 of the main text by (Ringrose 2020)\n\n\nPage 46—48 (Ringrose 2023)\n\n\n\n\n\n\n\n\n\nReferences\n\nRingrose, Philip. 2020. How to Store CO2 Underground: Insights from Early-Mover CCS Projects. Springer. https://link.springer.com/book/10.1007/978-3-030-33113-9.\n\n\n———. 2023. Storage of Carbon Dioxide in Saline Aquifers: Building Confidence by Forecasting and Monitoring. Society of Exploration Geophysicists.\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "weeks/week-03.html",
    "href": "weeks/week-03.html",
    "title": "Week 03",
    "section": "",
    "text": "Lectures\n\n\n\n\n\nTopic\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nLecture 4 — Calculating Storage Capacity\n\n\nEstimation, Theoretical Capacity, Storage Capacity Exponent\n\n\nMon, Jan 27\n\n\n\n\nLecture 5 — Estimating Storage Capacity\n\n\nStorage Efficiency, Sleipner\n\n\nWed, Jan 29\n\n\n\n\n\nNo matching items\n\n\n\n\nAssignments\n\n\n\n\n\nAssignment\n\n\nTitle\n\n\nDue\n\n\n\n\n\n\nExercise\n\n\nIn-class exercise\n\n\nMon, Jan 27\n\n\n\n\nExercise\n\n\nHomework\n\n\nMon, Feb 03\n\n\n\n\n\nNo matching items\n\n\n\n\nReadings\n\n\n\n\n\n\nSections 2.4 until equation 2.13 on page 38 of the main text by (Ringrose 2020)\n\n\nPage 7—11 (until Geological controls) (Ringrose 2023)\n\n\nSections 2.4 from equation 2.5 on (Ringrose 2020)\n\n\nPage 23—30 (Ringrose 2023)\n\n\n\n\n\n\n\n\n\nReferences\n\nRingrose, Philip. 2020. How to Store CO2 Underground: Insights from Early-Mover CCS Projects. Springer. https://link.springer.com/book/10.1007/978-3-030-33113-9.\n\n\n———. 2023. Storage of Carbon Dioxide in Saline Aquifers: Building Confidence by Forecasting and Monitoring. Society of Exploration Geophysicists.\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "hw/w3-hw03.html",
    "href": "hw/w3-hw03.html",
    "title": "Homework",
    "section": "",
    "text": "Please explain what is happening on an atomic or molecular scale that causes the phenomenon of surface tension. In particular, why is the meniscus for water in a vertical capillary tube concave and that for mercury convex?\n\n\n\n\nAssume a reservoir has homogeneous density denoted by \\(\\rho\\) and homogeneous porosity denoted by \\(\\phi\\). Initially, the pore spaces of the rocks in the reservoir is entirely filled with water. We now inject supercritical CO\\(_2\\) into the reservoir to replace water, and denote the saturation of CO\\(_2\\) as \\(S\\) (\\(0\\leq S\\leq 1\\)). Please be careful that \\(\\rho\\) is the density of rock filled with water, not the density of rock itself.\n\nSuppose \\(\\phi=0.3\\), \\(\\rho=3000\\) kg/m\\(^3\\) before injection. Please plot how \\(\\rho\\) changes with different values of CO\\(_2\\) saturations. What is the shape of the curve?\nNow change \\(\\rho=2000\\) kg/m\\(^3\\). Do the same experiment. What is the shape? Can you compare this curve to the previous one?\nNow we stick to \\(\\phi=0.3\\), \\(\\rho=3000\\) kg/m\\(^3\\), but inject another fluid as you like – gas, milk, belgium beer, liquid mercury, coca cola, etc. Do the same experiment. Compare this curve to the curve you got from the first one.\n\n\n\n\nDrawing inspiration from\nA. Donev et al., Improving the Density of Jammed Disordered Packings Using Ellipsoids, Science, 303, 990–993 (2004)\nD.A. Weitz, acking in the Spheres, Science, 303, 968–969 (2004);\nmeasure the porosity of a random close packing of M&M’s. Verify your result by bringing your particular collection of M&M’s to class. You can work with other kinds of cookie packs as you like. (In addition, a brief report on your experiment, including a short discussion of how your result agrees or disagrees with what is presented in the above articles, is required.)"
  },
  {
    "objectID": "hw/w3-hw03.html#q1",
    "href": "hw/w3-hw03.html#q1",
    "title": "Homework",
    "section": "",
    "text": "Please explain what is happening on an atomic or molecular scale that causes the phenomenon of surface tension. In particular, why is the meniscus for water in a vertical capillary tube concave and that for mercury convex?"
  },
  {
    "objectID": "hw/w3-hw03.html#q2",
    "href": "hw/w3-hw03.html#q2",
    "title": "Homework",
    "section": "",
    "text": "Assume a reservoir has homogeneous density denoted by \\(\\rho\\) and homogeneous porosity denoted by \\(\\phi\\). Initially, the pore spaces of the rocks in the reservoir is entirely filled with water. We now inject supercritical CO\\(_2\\) into the reservoir to replace water, and denote the saturation of CO\\(_2\\) as \\(S\\) (\\(0\\leq S\\leq 1\\)). Please be careful that \\(\\rho\\) is the density of rock filled with water, not the density of rock itself.\n\nSuppose \\(\\phi=0.3\\), \\(\\rho=3000\\) kg/m\\(^3\\) before injection. Please plot how \\(\\rho\\) changes with different values of CO\\(_2\\) saturations. What is the shape of the curve?\nNow change \\(\\rho=2000\\) kg/m\\(^3\\). Do the same experiment. What is the shape? Can you compare this curve to the previous one?\nNow we stick to \\(\\phi=0.3\\), \\(\\rho=3000\\) kg/m\\(^3\\), but inject another fluid as you like – gas, milk, belgium beer, liquid mercury, coca cola, etc. Do the same experiment. Compare this curve to the curve you got from the first one."
  },
  {
    "objectID": "hw/w3-hw03.html#q3",
    "href": "hw/w3-hw03.html#q3",
    "title": "Homework",
    "section": "",
    "text": "Drawing inspiration from\nA. Donev et al., Improving the Density of Jammed Disordered Packings Using Ellipsoids, Science, 303, 990–993 (2004)\nD.A. Weitz, acking in the Spheres, Science, 303, 968–969 (2004);\nmeasure the porosity of a random close packing of M&M’s. Verify your result by bringing your particular collection of M&M’s to class. You can work with other kinds of cookie packs as you like. (In addition, a brief report on your experiment, including a short discussion of how your result agrees or disagrees with what is presented in the above articles, is required.)"
  },
  {
    "objectID": "hw/w4-hw02.html",
    "href": "hw/w4-hw02.html",
    "title": "In-class exercise",
    "section": "",
    "text": "In the lectures, we learned that the capacity coefficient of a reservoir can be computed by\n\\(C_c = \\frac{V_{injected}}{V_{PV}} = \\frac{Q_{well}t}{\\phi B\\pi r_{max}^2}\\)\nNow assume the reservoir is in a circular shape, and\n\n7 million metric ton of supercritical CO\\(_2\\) is injected every year\n\nreservoir is 200m thick and 10km wide (diameter)\n\nporosity of rocks in the reservoir is 30%\n\n\n\nPlease calculate the reservoir capacity coefficient after 20, 30, 50, 100 years of injection.\n\n\n\nPlease calculate the reservoir capacity coefficient after 20, 30, 50, 100 years of injection if the shape of reservoir is a cone instead of a circular shape (width remains the same).\n\n\n\nPlease calculate the reservoir capacity coefficient after 20, 30, 50, 100 years of injection if the porosity of the rocks in the left half of the circular reservoir is changed to 20%.\n\n\n\nBriefly discuss how you would calculate the capacity coefficient if the reservoir is in an irregular shape with heterogeneous porosity."
  },
  {
    "objectID": "hw/w4-hw02.html#question-1",
    "href": "hw/w4-hw02.html#question-1",
    "title": "In-class exercise",
    "section": "",
    "text": "In the lectures, we learned that the capacity coefficient of a reservoir can be computed by\n\\(C_c = \\frac{V_{injected}}{V_{PV}} = \\frac{Q_{well}t}{\\phi B\\pi r_{max}^2}\\)\nNow assume the reservoir is in a circular shape, and\n\n7 million metric ton of supercritical CO\\(_2\\) is injected every year\n\nreservoir is 200m thick and 10km wide (diameter)\n\nporosity of rocks in the reservoir is 30%\n\n\n\nPlease calculate the reservoir capacity coefficient after 20, 30, 50, 100 years of injection.\n\n\n\nPlease calculate the reservoir capacity coefficient after 20, 30, 50, 100 years of injection if the shape of reservoir is a cone instead of a circular shape (width remains the same).\n\n\n\nPlease calculate the reservoir capacity coefficient after 20, 30, 50, 100 years of injection if the porosity of the rocks in the left half of the circular reservoir is changed to 20%.\n\n\n\nBriefly discuss how you would calculate the capacity coefficient if the reservoir is in an irregular shape with heterogeneous porosity."
  },
  {
    "objectID": "goals.html",
    "href": "goals.html",
    "title": "Goals",
    "section": "",
    "text": "Give a description of a surface-seismic experiment\nDescribe the basic steps of the post-stack seismic data flow and why they are important\nExplain why we need seismic exploration\nName seismic transducers and setup for land and marine acquition\nDescribe different seismic gathers\nWhat are the assumptions underlying NMO\nWhat is the role of the “fold” of the acquisition and why is it important\nDescribe the mathematical relation between midpoint/offset and source-receiver coordinates\nWhy is the sampling rate different for common-shot and common midpoint gathers\nDescribe the principle of velocity estimation with NMO\nWhat does migration try to accomplish\nGive a geometric description of the process of zero-offset migration.\nDescribe the different terms in the Rayleigh II integral\nDecribe the extrapolation “work flow”\nFlowshart for shot extrapolation in the f-k domain\nWhat is the expression for the wavefield extrapolation operator in the f-k domain.\nWhat change do you need to make to do inverse extrapolation\nDescribe in pictures forward wavefield extrapolation for a shot record with two events\nDescribe recursive inverse wavefield extrapolation of a shot record with a single reflection event by a number of plots\nWhat is the main assumption on the behavior of the velocity in f-k based recursive extrapolation and what happens to the extrapolation operator compared to the lateral invariant case\nName the five steps of prestack migration\nWhat are the underlying assumptions regarding the use of a particular migration scheme in relation to the complexity of the subsurface.\nDraw a schematic of the “impulse” response of the migration operator and the linearized scattering operator.\nDescribe the different steps of pre-stack shot migration\nWhat is the difference between pre- and post-stack migration?\nWhat is the effect of summing the images of the different shot gathers\nIn what situation is pre-stack time migration a viable option and when not\nWhat migration scheme would you use in case of complex velocities and complex structure\n\n\n\n\n\nWavefield extrapolation via Rayleigh II\nWavefield extrapolation via the f-k domain\n\\(V(z)\\) migration\nShot record migration\nRecursive extrapolation in varying media\nPre-stack shot migration\nOne-way wave-equation migration\nReverse-time migration\nVelocity-model estimation\n\nTraveltime tomography\nmigration-velocity analysis\n\nWhat are the two prevailing methods to estimate the velocity model and what information do they need\nDescribe the main principles of travel-time tomography\nDescribe the main principles of migration velocity analyses\nWhat are the differences between these two methods of velocity model estimation\n\n\n\n\n\nDescribe the principle and assumptions behind f-k filtering\nWrite down the Radon transform in the physical and Fourier domain\nDescribe Radon filtering sequence of operations to remove multiples\nDescribe what the process of seismic deconvolution tries to accomplish",
    "crumbs": [
      "Goals"
    ]
  },
  {
    "objectID": "goals.html#part-1",
    "href": "goals.html#part-1",
    "title": "Goals",
    "section": "",
    "text": "Give a description of a surface-seismic experiment\nDescribe the basic steps of the post-stack seismic data flow and why they are important\nExplain why we need seismic exploration\nName seismic transducers and setup for land and marine acquition\nDescribe different seismic gathers\nWhat are the assumptions underlying NMO\nWhat is the role of the “fold” of the acquisition and why is it important\nDescribe the mathematical relation between midpoint/offset and source-receiver coordinates\nWhy is the sampling rate different for common-shot and common midpoint gathers\nDescribe the principle of velocity estimation with NMO\nWhat does migration try to accomplish\nGive a geometric description of the process of zero-offset migration.\nDescribe the different terms in the Rayleigh II integral\nDecribe the extrapolation “work flow”\nFlowshart for shot extrapolation in the f-k domain\nWhat is the expression for the wavefield extrapolation operator in the f-k domain.\nWhat change do you need to make to do inverse extrapolation\nDescribe in pictures forward wavefield extrapolation for a shot record with two events\nDescribe recursive inverse wavefield extrapolation of a shot record with a single reflection event by a number of plots\nWhat is the main assumption on the behavior of the velocity in f-k based recursive extrapolation and what happens to the extrapolation operator compared to the lateral invariant case\nName the five steps of prestack migration\nWhat are the underlying assumptions regarding the use of a particular migration scheme in relation to the complexity of the subsurface.\nDraw a schematic of the “impulse” response of the migration operator and the linearized scattering operator.\nDescribe the different steps of pre-stack shot migration\nWhat is the difference between pre- and post-stack migration?\nWhat is the effect of summing the images of the different shot gathers\nIn what situation is pre-stack time migration a viable option and when not\nWhat migration scheme would you use in case of complex velocities and complex structure\n\n\n\n\n\nWavefield extrapolation via Rayleigh II\nWavefield extrapolation via the f-k domain\n\\(V(z)\\) migration\nShot record migration\nRecursive extrapolation in varying media\nPre-stack shot migration\nOne-way wave-equation migration\nReverse-time migration\nVelocity-model estimation\n\nTraveltime tomography\nmigration-velocity analysis\n\nWhat are the two prevailing methods to estimate the velocity model and what information do they need\nDescribe the main principles of travel-time tomography\nDescribe the main principles of migration velocity analyses\nWhat are the differences between these two methods of velocity model estimation\n\n\n\n\n\nDescribe the principle and assumptions behind f-k filtering\nWrite down the Radon transform in the physical and Fourier domain\nDescribe Radon filtering sequence of operations to remove multiples\nDescribe what the process of seismic deconvolution tries to accomplish",
    "crumbs": [
      "Goals"
    ]
  },
  {
    "objectID": "docker.html",
    "href": "docker.html",
    "title": "Docker",
    "section": "",
    "text": "In this course, we will have a couple of coding assignments based on Julia, a fast, dynamic, reproducible composable and general open source programming language. You are encouraged to install Julia on your system following the script to run some basic coding experiments to explore its usage and applications in scientific computing community.\nIn particular, you will run numerical experiments for CO\\(_2\\) dynamics simulation and also seismic wave-based simulations with academically developed softwares. To help you run these software, we highly recommend you use Docker, a platform which builds a virtual machine/container for you with the docker image, which is set-up by us and equipped with pre-installed softwares. The docker image is quite necessary for you to run the software without the tedious installation process, and to provide you with an environment on which the software runs out of the box.\nFirst install docker for your system following the instruction here,\nhttps://www.docker.com/products/docker-desktop\nInstead of having to install Python, Julia, Devito, JUDI, FwiFlow and all the dependencies (these are the softwares that you will use for the numerical simulation) by yourself, you simply download the docker image and run it in a container. All you need to do is install docker, click the docker icon/app, open the terminal/command line (powershell in windows, also see this) on your system, and run:\ndocker run --platform linux/x86_64 --env JULIA_NUM_THREADS=4 -p 8888:8888 -v /path/on/your/machine:/notebooks haoyunl/eas-8803:2.0\nwhere /path/on/your/machine is an absolute path on your own local machine. Remember giving a folder path is important. For example, if I want to connect the folder called testdocker on the desktop of my laptop, I can do\ndocker run --platform linux/x86_64 --env JULIA_NUM_THREADS=4 -p 8888:8888 -v /Users/haoyun/Desktop/testdocker:/notebooks haoyunl/eas-8803:2.0\nThis will download the image and launch a jupyter notebook that you can access from your internet browser. The command will display a link, which looks something like this:\nCopy/paste this URL into your browser when you connect for the first time,\n    to login with a token:\n        http://0e27b13128d4:8888/?token=84a95cf4319e8e68534f20c7c6474d9875f13c70270f35f4&token=84a95cf4319e8e68534f20c7c6474d9875f13c70270f35f4\nCopy/paste this link and replace the address 0e27b13128d4:8888 with localhost:8888 (the link is created inside the docker container, which doesn’t know that you mapped this port to your localhost w/ port no. 8888). Then, you can create a notebook there by clicking new -&gt; notebook -&gt; julia 1.8.5, and run the julia code in the jupyter notebook. Try running these packages in notebook for fun\nusing JutulDarcyRules\nusing LinearAlgebra\nusing PyPlot\nusing SlimPlotting\nusing JLD2, Polynomials, Images\n\nWhatever you do on the docker container will be saved in the local testdocker folder. And then you need to copy the homework notebook once it is released to this folder and run your codes in that notebook.\nInstead of a notebook, you can also launch an interactive session with a terminal by running:\ndocker run -it haoyunl/eas-8803:2.0 /bin/bash\nThis will give you access to a terminal, in which you can start Julia/Python, run a couple of lines of code interactively. However, figures from PyPlot (the plotting package) sometimes do not render well from interactive julia sessions. Therefore, jupyter notebooks on docker are recommended for you to do the assignments.\n\n\nBy default, the command\ndocker run --platform linux/x86_64 --env JULIA_NUM_THREADS=4 -p 8888:8888 -v /path/on/your/machine:/notebooks haoyunl/eas-8803:2.0\nwill use 4 threads because in the above command JULIA_NUM_THREADS=4 is set. If you want to increase the number of threads to run your code faster, you need to know the number of threads on your machine and then set JULIA_NUM_THREADS equal to that number. To know the number of threads on your machine you can do:\nFor Mac, write on terminal: sysctl -n hw.logicalcpu\nFor Linux, write on terminal: lscpu\nThe number of threads = number of threads per core * No. of CPUs\nFor windows: Follow this link\n\n\n\nIf you are using windows, you might need to enable hardware virtualization in their BIOS. You are suggested to look at here and here. If you have any question, please reach out to us ASAP.",
    "crumbs": [
      "Docker"
    ]
  },
  {
    "objectID": "docker.html#docker-installation",
    "href": "docker.html#docker-installation",
    "title": "Docker",
    "section": "",
    "text": "In this course, we will have a couple of coding assignments based on Julia, a fast, dynamic, reproducible composable and general open source programming language. You are encouraged to install Julia on your system following the script to run some basic coding experiments to explore its usage and applications in scientific computing community.\nIn particular, you will run numerical experiments for CO\\(_2\\) dynamics simulation and also seismic wave-based simulations with academically developed softwares. To help you run these software, we highly recommend you use Docker, a platform which builds a virtual machine/container for you with the docker image, which is set-up by us and equipped with pre-installed softwares. The docker image is quite necessary for you to run the software without the tedious installation process, and to provide you with an environment on which the software runs out of the box.\nFirst install docker for your system following the instruction here,\nhttps://www.docker.com/products/docker-desktop\nInstead of having to install Python, Julia, Devito, JUDI, FwiFlow and all the dependencies (these are the softwares that you will use for the numerical simulation) by yourself, you simply download the docker image and run it in a container. All you need to do is install docker, click the docker icon/app, open the terminal/command line (powershell in windows, also see this) on your system, and run:\ndocker run --platform linux/x86_64 --env JULIA_NUM_THREADS=4 -p 8888:8888 -v /path/on/your/machine:/notebooks haoyunl/eas-8803:2.0\nwhere /path/on/your/machine is an absolute path on your own local machine. Remember giving a folder path is important. For example, if I want to connect the folder called testdocker on the desktop of my laptop, I can do\ndocker run --platform linux/x86_64 --env JULIA_NUM_THREADS=4 -p 8888:8888 -v /Users/haoyun/Desktop/testdocker:/notebooks haoyunl/eas-8803:2.0\nThis will download the image and launch a jupyter notebook that you can access from your internet browser. The command will display a link, which looks something like this:\nCopy/paste this URL into your browser when you connect for the first time,\n    to login with a token:\n        http://0e27b13128d4:8888/?token=84a95cf4319e8e68534f20c7c6474d9875f13c70270f35f4&token=84a95cf4319e8e68534f20c7c6474d9875f13c70270f35f4\nCopy/paste this link and replace the address 0e27b13128d4:8888 with localhost:8888 (the link is created inside the docker container, which doesn’t know that you mapped this port to your localhost w/ port no. 8888). Then, you can create a notebook there by clicking new -&gt; notebook -&gt; julia 1.8.5, and run the julia code in the jupyter notebook. Try running these packages in notebook for fun\nusing JutulDarcyRules\nusing LinearAlgebra\nusing PyPlot\nusing SlimPlotting\nusing JLD2, Polynomials, Images\n\nWhatever you do on the docker container will be saved in the local testdocker folder. And then you need to copy the homework notebook once it is released to this folder and run your codes in that notebook.\nInstead of a notebook, you can also launch an interactive session with a terminal by running:\ndocker run -it haoyunl/eas-8803:2.0 /bin/bash\nThis will give you access to a terminal, in which you can start Julia/Python, run a couple of lines of code interactively. However, figures from PyPlot (the plotting package) sometimes do not render well from interactive julia sessions. Therefore, jupyter notebooks on docker are recommended for you to do the assignments.\n\n\nBy default, the command\ndocker run --platform linux/x86_64 --env JULIA_NUM_THREADS=4 -p 8888:8888 -v /path/on/your/machine:/notebooks haoyunl/eas-8803:2.0\nwill use 4 threads because in the above command JULIA_NUM_THREADS=4 is set. If you want to increase the number of threads to run your code faster, you need to know the number of threads on your machine and then set JULIA_NUM_THREADS equal to that number. To know the number of threads on your machine you can do:\nFor Mac, write on terminal: sysctl -n hw.logicalcpu\nFor Linux, write on terminal: lscpu\nThe number of threads = number of threads per core * No. of CPUs\nFor windows: Follow this link\n\n\n\nIf you are using windows, you might need to enable hardware virtualization in their BIOS. You are suggested to look at here and here. If you have any question, please reach out to us ASAP.",
    "crumbs": [
      "Docker"
    ]
  },
  {
    "objectID": "docker.html#new-docker-container-for-seismic-experiments",
    "href": "docker.html#new-docker-container-for-seismic-experiments",
    "title": "Docker",
    "section": "New docker container for Seismic Experiments",
    "text": "New docker container for Seismic Experiments\ndocker run --platform linux/x86_64 --env JULIA_NUM_THREADS=4 -p 8888:8888 -v /path/on/your/machine:/notebooks haoyun/ccsenv:v2.0\nFollow the same procedure as before to run new docker with the above command. Please note you will still use previous docker for HW3. This docker is for seismic modelling which is next part of the course and you will use it for seismic imaging experiments later. To get familiar, there is a notebook tutorial (In-class exercise 3) associated with this docker. You should download the notebook, put it the folder where you run this docker from, and play with it.\n(Later you will also need a package called MECurvelets which can be installed by using Pkg; Pkg.add(url=\"https://github.gatech.edu/SLIM/MECurvelets.jl\"). We will help installing this package.)",
    "crumbs": [
      "Docker"
    ]
  },
  {
    "objectID": "docker.html#some-useful-material",
    "href": "docker.html#some-useful-material",
    "title": "Docker",
    "section": "Some Useful Material",
    "text": "Some Useful Material\nLearn command line from Software Carpentry\nLearn jupyter notebook\nLearn Julia",
    "crumbs": [
      "Docker"
    ]
  },
  {
    "objectID": "docker.html#in-class-exercise",
    "href": "docker.html#in-class-exercise",
    "title": "Docker",
    "section": "In-class Exercise",
    "text": "In-class Exercise\nDuring the lectures you will work on the following exercises\n\nThickness of reservoir. Exercise 1 (Jan 20, 2022)\nCapacity coefficient. Exercise 2 (Jan 27, 2022)",
    "crumbs": [
      "Docker"
    ]
  },
  {
    "objectID": "docker.html#hand-in",
    "href": "docker.html#hand-in",
    "title": "Docker",
    "section": "Hand in",
    "text": "Hand in\nPlease turn in your assignments as pdf files. The assignments should be send to Haoyun Li. Late hand-ins are not accepted. If you have difficulty on the homework and want to ask for extension, please email Dr. Felix Herrmann and cc TA in advance (at least 2 days before the deadline).",
    "crumbs": [
      "Docker"
    ]
  },
  {
    "objectID": "docker.html#feedback",
    "href": "docker.html#feedback",
    "title": "Docker",
    "section": "Feedback",
    "text": "Feedback\nWe will give you feedback on the marking of the exercises.",
    "crumbs": [
      "Docker"
    ]
  },
  {
    "objectID": "slides/week-01/01-intro.html#course-outline",
    "href": "slides/week-01/01-intro.html#course-outline",
    "title": "Welcome to Seismic Monitoring CO2 Storage",
    "section": "Course outline",
    "text": "Course outline\nThis is a new advanced course that is being developed during this term.\n\nSyllabus\nSchedule\netc.\n\nare all made available and constantly updated on\nhttps://flexie.github.io/EAS-8803-CCS//"
  },
  {
    "objectID": "slides/week-01/01-intro.html#objectives",
    "href": "slides/week-01/01-intro.html#objectives",
    "title": "Welcome to Seismic Monitoring CO2 Storage",
    "section": "Objectives",
    "text": "Objectives\nBy the end of the semester, you will be made familiar with …\n\nBasics of Geological Carbon Storage\nTechniques on how to monitor Geological Carbon Storage\nHow to scale up this net-negative carbon emission technology\n\nFor a motivational talk watch this video by Philip Ringrose.\nFor more on the Course outline, Topics, and Learning goals, see Goals."
  },
  {
    "objectID": "slides/week-01/01-intro.html#textbooks",
    "href": "slides/week-01/01-intro.html#textbooks",
    "title": "Welcome to Seismic Monitoring CO2 Storage",
    "section": "Textbooks",
    "text": "Textbooks\n\n\n\nRingrose, P. (2020), How to Store CO2 Underground: insights from early-mover CCS Projects1\nRingrose (2020)\nElsevier, 2020\n\n\nStorage of Carbon Dioxide in Saline Aquifers: Building confidence by forecasting and monitoring\nRingrose (2023)\nSEG, 2023\n\n\nGeophysics and the Energy Transition2\nWilson, Davis, and Landrø (2025)\nScience Direct, 2025\n\n\n\nebook available from the Georgia Tech Libraryebook available from the Georgia Tech Library"
  },
  {
    "objectID": "slides/week-01/01-intro.html#section",
    "href": "slides/week-01/01-intro.html#section",
    "title": "Welcome to Seismic Monitoring CO2 Storage",
    "section": "",
    "text": "Slides for the lecture can be found here\n\nin .pdf format\nin .html format.\n\nYou need to download the html directory and open the index.html file."
  },
  {
    "objectID": "slides/week-01/01-intro.html#references",
    "href": "slides/week-01/01-intro.html#references",
    "title": "Welcome to Seismic Monitoring CO2 Storage",
    "section": "",
    "text": "Ringrose, Philip. 2020. How to Store CO2 Underground: Insights from Early-Mover CCS Projects. Springer. https://link.springer.com/book/10.1007/978-3-030-33113-9.\n\n\n———. 2023. Storage of Carbon Dioxide in Saline Aquifers: Building Confidence by Forecasting and Monitoring. Society of Exploration Geophysicists.\n\n\nWilson, Malcolm, Tom Davis, and Martin Landrø, eds. 2025. “Title Page.” In Geophysics and the Energy Transition, i–iii. Elsevier. https://doi.org/https://doi.org/10.1016/B978-0-323-95941-4.00021-5."
  },
  {
    "objectID": "slides/week-06/10-pressure.html#section",
    "href": "slides/week-06/10-pressure.html#section",
    "title": "Lecture 10 — Handling Pressure",
    "section": "",
    "text": "Slides for the lecture can be found here\n\nin .pdf format\nin .html format.\n\nYou need to download the html directory and open the index.html file."
  },
  {
    "objectID": "slides/week-07/12-monitoring-2.html#section",
    "href": "slides/week-07/12-monitoring-2.html#section",
    "title": "Lecture 12 — Monitoring II",
    "section": "",
    "text": "Slides for the lecture can be found here\n\nin .pdf format\nin .html format.\n\nYou need to download the html directory and open the index.html file."
  },
  {
    "objectID": "slides/week-09/15-Basics-Seismic-Imaging-2.html#section",
    "href": "slides/week-09/15-Basics-Seismic-Imaging-2.html#section",
    "title": "Lecture 15 — Basics Seismic Imaging II",
    "section": "",
    "text": "Slides for the lecture can be found here\n\nin .pdf format"
  },
  {
    "objectID": "slides/week-05/08-injectivity-geomechanics.html#section",
    "href": "slides/week-05/08-injectivity-geomechanics.html#section",
    "title": "Lecture 9 — Geomechanics & Pressure",
    "section": "",
    "text": "Slides for the lecture can be found here\n\nin .pdf format\nin .html format.\n\nYou need to download the html directory and open the index.html file."
  },
  {
    "objectID": "slides/week-03/05-storage-efficiency.html#section",
    "href": "slides/week-03/05-storage-efficiency.html#section",
    "title": "Lecture 5 — Estimating Storage Capacity",
    "section": "",
    "text": "Slides for the lecture can be found here\n\nin .pdf format\nin .html format.\n\nYou need to download the html directory and open the index.html file."
  },
  {
    "objectID": "slides/week-04/06-flow-simulations.html#section",
    "href": "slides/week-04/06-flow-simulations.html#section",
    "title": "Lecture 6 — Reservoir Simulations",
    "section": "",
    "text": "Slides for the lecture can be found here\n\nin .pdf format\nin .html format.\n\nYou need to download the html directory and open the index.html file."
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus1",
    "section": "",
    "text": "By the end of the semester, you will be made familiar with …\n\nBasics of Geological Carbon Storage\nTechniques on how to monitor Geological Carbon Storage\nHow to scale up this net-negative carbon emission technology\n\nFor more on the course Outline, Topics, and Learning goals, see Goals.\nFor a motivational talk watch this video by Philip Ringrose.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#course-learning-objectives",
    "href": "syllabus.html#course-learning-objectives",
    "title": "Syllabus1",
    "section": "",
    "text": "By the end of the semester, you will be made familiar with …\n\nBasics of Geological Carbon Storage\nTechniques on how to monitor Geological Carbon Storage\nHow to scale up this net-negative carbon emission technology\n\nFor more on the course Outline, Topics, and Learning goals, see Goals.\nFor a motivational talk watch this video by Philip Ringrose.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#course-material",
    "href": "syllabus.html#course-material",
    "title": "Syllabus1",
    "section": "Course Material",
    "text": "Course Material\n\nTextbooks on Geological Carbon Storage\n\n\n\nRingrose, P. (2020), How to Store CO2 Underground: insights from early-mover CCS Projects2\nRingrose (2020)\nElsevier, 2020\n\n\nStorage of Carbon Dioxide in Saline Aquifers: Building confidence by forecasting and monitoring3\nRingrose (2023)\nSEG, 2023\n\n\nGeophysics and the Energy Transition4\nWilson, Davis, and Landrø (2025)\nScience Direct, 2025\n\n\nReservoir model design : a practitioner’s guide5\nPhilip and Mark (2015)\nSpringer, 2015\n\n\n\n\n\nAdditional reading material\nDetails on readings will be provided on a lecture by lecture basis following this Schedule.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#course-community",
    "href": "syllabus.html#course-community",
    "title": "Syllabus1",
    "section": "Course community",
    "text": "Course community\n\nInclusive community\nIt is my intent that students from all diverse backgrounds and perspectives be well-served by this course, that students’ learning needs be addressed both in and out of class, and that the diversity that the students bring to this class be viewed as a resource, strength, and benefit. It is my intent to present materials and activities that are respectful of diversity and in alignment with Georgia Tech’s Commitment to Diversity and Inclusion. Your suggestions are encouraged and appreciated.\n\n\nDiscrimination, Harassment, and Sexual Misconduct\nTo maintain a safe learning environment that fosters the dignity, respect, and success of students, faculty, and staff, Tech prohibits discriminatory harassment, which is unwelcome verbal, nonverbal, or physical conduct directed at any person or group based upon race, color, religion, sex, national origin, age, disability, sexual orientation, gender identity, or veteran status that has the purpose or effect of creating an objectively hostile working or academic environment.\n\n\nAccessibility\nIf there is any portion of the course that is not accessible to you due to challenges with technology or the course format, please let me know so we can make appropriate accommodations.\nDisability Services are available to ensure that students are able to engage with their courses and related assignments. Students should be in touch with the Student Disability Access Office to request or update accommodations under these circumstances.\n\n\nCommunication\nAll lecture notes, assignment instructions, an up-to-date schedule, and other course materials may be found on the course website.\nInstructions on how to setup software for the computational lab assignments can be found under Docker.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#activities-assessment",
    "href": "syllabus.html#activities-assessment",
    "title": "Syllabus1",
    "section": "Activities & Assessment",
    "text": "Activities & Assessment",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#course-requirements",
    "href": "syllabus.html#course-requirements",
    "title": "Syllabus1",
    "section": "Course requirements",
    "text": "Course requirements\nSeismic Monitoring CO2 Storage - EAS 4803 - EAS 8803 - FH is a cross-listed under/graduate course. The requirements differ as follows:\n\nthere will be additional exam questions for graduate students\nthere will be additional assignments for graduate students",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#assignments",
    "href": "syllabus.html#assignments",
    "title": "Syllabus1",
    "section": "Assignments",
    "text": "Assignments\nDetails on the assignments will be provided on a lecture by lecture basis following this Schedule. These assignments will mostly involve geophysics-related programs, computer simulations, and data analysis. These assignments are designed for each student to work one by him/herself. Collaboration is to a reasonable degree encouraged. During these assignments, you will apply concepts discussed during lectures, with a focus on the computational aspects. These assignments will count towards 35% of your overall course grade.\n\nExams\nThere will be a midterm (25%) and a final exam (25%). Both of them are closed book. Reference to texts or other documents such as previous semester course materials during exams is strictly forbidden. Using these materials will be considered a direct violation of academic policy and will be dealt with according to the GT Academic Honor Code. The use of electronic devices (e.g. cellular phones, computers etc.) other than non-programmable calculators during exams and quizzes is not allowed.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#project",
    "href": "syllabus.html#project",
    "title": "Syllabus1",
    "section": "Project",
    "text": "Project\nToward the end of the term, you will work on a computational project entailing the different topics covered during the course. You can find more details on the Projects page. This Project will count towards 15% of your overall course grade.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#grading",
    "href": "syllabus.html#grading",
    "title": "Syllabus1",
    "section": "Grading",
    "text": "Grading\nThe final course grade will be calculated as follows:\n\n\n\n\nCategory\nPercentage\n\n\n\n\nAssignments\n35%\n\n\nMidterm exam\n25%\n\n\nProject\n15%\n\n\nFinal exam\n25%",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#important-dates",
    "href": "syllabus.html#important-dates",
    "title": "Syllabus1",
    "section": "Important dates",
    "text": "Important dates\n\nJan 2-10 Phase II Registration\nJan 6: Classes begin\nMarch 13: Last day to withdraw\nMarch 17-21: Spring break\nApril 21: Final Instructional Class",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#course-policies",
    "href": "syllabus.html#course-policies",
    "title": "Syllabus1",
    "section": "Course policies",
    "text": "Course policies\n\nAcademic honesty\nPlease abide by the following as you work on assignments in this course:\n\nYou may discuss individual lab assignments with other students; however, you may not directly share (or copy) code or write up with other students. For team assignments, you may collaborate freely within your team. You may discuss the assignment with other teams; however, you may not directly share (or copy) code or write up with another team. Unauthorized sharing (or copying) of the code or write up will be considered a violation for all students involved.\nReusing code: Unless explicitly stated otherwise, you may make use of online resources (e.g. StackOverflow) for coding examples on assignments. If you directly use code from an outside source (or use it as inspiration), you must explicitly cite where you obtained the code. Any recycled code that is discovered and is not explicitly cited will be treated as plagiarism.\n\n\n\nGuidance on the use of Generative AI\nAI-based assistance, such as ChatGPT and Copilot, can be used in the same way as collaboration with other people for the following activities: For lab assignments in understanding the lecture and textbook materials, and in developing your ideals for the project proposals. In these activities you are welcome to talk about your ideas and work with other people, both inside and outside the class, as well as with AI- based assistants. In the course, we will discuss how you can use these tools as a study tool, or as an assistant in helping to draft code or summaries.\n\nGenerating Research Ideas or Approaches:\n\nBrainstorming: You can use the AI tool as a brainstorming partner, where you exchange ideas whether the AI prompts you or you prompt the AI for ideas. Brainstorming is an iterative process that can be made more effective with the way that the queries are posted. For more samples or information, post this query: “How can I use AI to help me to brainstorm an idea?”\nSurveying Existing Approaches: Large Language Models, if trained broadly in a topic, can give a good initial overview of existing approaches or existing literature on a topic. Current research sources such as library or professional society databases are more reliable in terms of accuracy of peer-reviewed content.\nPrompt engineering is important: Practice the prompts used for Generative AI. The value of the response depends on the value of the prompt. If you provide a low quality or vague prompt, you will get vague results. Varying skill levels among users might exacerbate existing inequalities among students. For example, students for whom English is the second language might be at a disadvantage.\n\n\n\nAdvice on Usage:\n\nBe very skeptical of the results. Do not trust any outputs that you cannot evaluate yourself or trace back to original credible sources. There are many stories of generative AI giving citations of articles that do not exist (see the article in the Chronicles of Higher Education referenced below).\nBe scientific with your prompts (or queries): Prompting is not deterministic, so the same prompt at a different time may result in a different response. Small changes in the wording of the prompt may yield very different responses. Keep records, make small changes and see how it affects the outcome, etc.\nDon’t share any data or information that is confidential, proprietary, or have IP implications. Your uploaded data or ideas might be incorporated into the learning model to be available for others in your research area, prior to you having a chance to publish it. If you intend to pursue commercialization or other Intellectual Property avenues for your work, putting the information into an open AI platform may be considered as disclosure.\n\n\n\n\nLate work & extensions\nThe due dates for assignments are there to help you keep up with the course material and to ensure the teaching team can provide feedback within a timely manner. We understand that things come up periodically that could make it difficult to submit an assignment by the deadline. Note that the lowest lab assignments will be dropped to accommodate such circumstances.\n\n\nCampus Resources for Students\nLinks to Campus Resources for Students — e.g. Center for Academic Success, Communication Center, Office of Disability Services, OMED, Division of Student Life, etc. available at: https://ctl.gatech.edu/sites/default/files/documents/campus_resources_students.pdf\n\nQuick Guide on Student Mental Health and Wellness Resources:\nThe Center for Mental Health Care & Resources is here to offer confidential support and services to students in need of mental health care. During regular business hours, students who are not actively in counseling may call 404-894-2575 or walk-in to the office , 353 Ferst DR NW Atlanta GA 30313 (Flag building next to the Student Center). Any time outside of business hours, students may call 404-894-2575 and select the option to speak to the after-hours counselor.\n\n\nAdditional On Campus Options\nStudents who are experiencing an immediate life-threatening emergency on campus, can call the Georgia Tech Campus Police at 404-894-2500\n\n\nLocal and National crisis resources available 24/7:\n\nCrisis Text Line: Text HOME to 741741 https://www.crisistextline.org/\nGeorgia Crisis & Access Line: Call 1-800-715-4225\nNational Suicide Prevention Lifeline: Call 988 or 1-800-273-8255, or access text chat here https://suicidepreventionlifeline.org/chat/\n\n\n\nAdditional services offered by Satellite counselors’ (walk-in consultation hours):\nEach Satellite counselor provides weekly consultation appointments at varying times based on their schedules (see highlighted section below for my Fall ’23 hours). Anyone can access a Satellite counselor during these times, to set up a consultation email is preferable, once a message is received the Satellite counselor will reply with available dates/times and a link. Some Satellite counselors will accommodate in-person walk-ins at these times as well.\n\nWhat it is\n\nConsulting about a brief, non-emergency concern during the counselor’s posted walk-in consultation hours (similar to Let’s Talk). Consultations are approximately 15 minutes.\nProviding information to students about mental health resources on campus and how to get connected\nConsulting with faculty/staff about a student of concern\n\n\n\nWhat it isn’t\n\nNot for a walk-in counseling appointment or initial assessment\nNot for students who are seeking support in their counselor’s absence. Students who need additional/urgent support when their counselor is unavailable should visit the Center for Mental Health Care & Resources\nNot for crisis\nNot for case management\n\nTara Holdampf, MS, LPC, (she/her), Satellite Counselor’s Consultation Hours for the College of Sciences: Please email tara.holdampf@studentlife.gatech.edu for an appointment, or stop by my Office Location: MoSE 1120B. Monday-Friday 3:00 PM - 4:00 PM\n\n\nOther useful web pages to explore:\nGT Wellness Hub: https://gtwellnesshub.com (self-paced online resources for students)\n\nFree Headspace (for Students Only): https://gtwellnesshub.com/personal-guide-to-health- happiness/\nTogetherall (for Students Only): https://gtwellnesshub.com/one-on-one-personal-assistance/\nSilver cloud (for Students Only): https://gtwellnesshub.com/helpful-resources-right-at-your- fingertips/\n\nDivision of Student Engagement and Wellbeing: https://students.gatech.edu/\nHealth, Wellness & Recreation: https://students.gatech.edu/health-wellness-recreation\nTech Ends Suicide: https://mentalhealth.gatech.edu/end-suicide-initiative\nMental Health Services: https://mentalhealth.gatech.edu/about/services",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#footnotes",
    "href": "syllabus.html#footnotes",
    "title": "Syllabus1",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSyllabus updates: This syllabus is subject to change throughout the semester. We will try to keep these updates to a minimum. ↩︎\nebook available from the Georgia Tech Library↩︎\navailable here for use during course only↩︎\nebook available from the Georgia Tech Library↩︎\nebook available from the Georgia Tech Library↩︎",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Seismic Monitoring CO~2~ Storage",
    "section": "",
    "text": "To be populated.\n\n\n\n\n\n\nReuseCC BY 4.0",
    "crumbs": [
      "Project"
    ]
  }
]